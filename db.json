[{"model": "admin.logentry", "pk": 1, "fields": {"action_time": "2021-09-10T09:55:26.442Z", "user": 1, "content_type": 8, "object_id": "1", "object_repr": "Заметки", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 2, "fields": {"action_time": "2021-09-10T10:05:46.995Z", "user": 1, "content_type": 8, "object_id": "2", "object_repr": "Книги", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 3, "fields": {"action_time": "2021-09-10T10:05:57.745Z", "user": 1, "content_type": 8, "object_id": "1", "object_repr": "Заметки", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Slug\"]}}]"}}, {"model": "admin.logentry", "pk": 4, "fields": {"action_time": "2021-09-10T10:06:30.010Z", "user": 1, "content_type": 11, "object_id": "1", "object_repr": "Заметки : 1 тестовая запись в типе заметки", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 5, "fields": {"action_time": "2021-09-16T07:51:54.825Z", "user": 1, "content_type": 11, "object_id": "1", "object_repr": "Заметки : 1 тестовая запись в типе заметки", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 6, "fields": {"action_time": "2021-09-16T07:52:05.908Z", "user": 1, "content_type": 11, "object_id": "1", "object_repr": "Заметки : 1 тестовая запись в типе заметки", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u041a\\u043e\\u043d\\u0442\\u0435\\u043d\\u0442\"]}}]"}}, {"model": "admin.logentry", "pk": 7, "fields": {"action_time": "2021-09-16T07:52:14.731Z", "user": 1, "content_type": 11, "object_id": "1", "object_repr": "Заметки : 1 тестовая запись в типе заметки", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u041a\\u043e\\u043d\\u0442\\u0435\\u043d\\u0442\"]}}]"}}, {"model": "admin.logentry", "pk": 8, "fields": {"action_time": "2021-09-16T08:01:50.854Z", "user": 1, "content_type": 9, "object_id": "1", "object_repr": "category : Youtube", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 9, "fields": {"action_time": "2021-09-16T08:06:19.560Z", "user": 1, "content_type": 11, "object_id": "1", "object_repr": "Заметки : 1 тестовая запись в типе заметки", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u041a\\u0430\\u0442\\u0435\\u0433\\u043e\\u0440\\u0438\\u0438,\\u0442\\u0435\\u0433\\u0438\"]}}]"}}, {"model": "admin.logentry", "pk": 10, "fields": {"action_time": "2021-09-16T08:10:57.316Z", "user": 1, "content_type": 11, "object_id": "1", "object_repr": "Заметки : 1 тестовая запись в типе заметки", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 11, "fields": {"action_time": "2021-09-16T08:11:43.076Z", "user": 1, "content_type": 8, "object_id": "3", "object_repr": "Курсы", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 12, "fields": {"action_time": "2021-09-16T08:46:20.619Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "Ссылка на канал <int>", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 13, "fields": {"action_time": "2021-09-16T08:48:08.938Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "Ссылка на канал <link>", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u0422\\u0438\\u043f \\u043f\\u043e\\u043b\\u044f\"]}}]"}}, {"model": "admin.logentry", "pk": 14, "fields": {"action_time": "2021-09-16T08:50:25.359Z", "user": 1, "content_type": 9, "object_id": "2", "object_repr": "category : Курс Django Web for my self", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 15, "fields": {"action_time": "2021-09-16T15:27:57.429Z", "user": 1, "content_type": 11, "object_id": "2", "object_repr": "Заметки : SQL уровни изоляции транзакций", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 16, "fields": {"action_time": "2021-09-16T15:28:32.488Z", "user": 1, "content_type": 9, "object_id": "3", "object_repr": "category : Habr", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 17, "fields": {"action_time": "2021-09-16T15:28:40.524Z", "user": 1, "content_type": 11, "object_id": "2", "object_repr": "Заметки : SQL уровни изоляции транзакций", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u041a\\u0430\\u0442\\u0435\\u0433\\u043e\\u0440\\u0438\\u0438,\\u0442\\u0435\\u0433\\u0438\"]}}]"}}, {"model": "admin.logentry", "pk": 18, "fields": {"action_time": "2021-09-16T15:33:42.379Z", "user": 1, "content_type": 11, "object_id": "2", "object_repr": "Заметки : SQL уровни изоляции транзакций", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u041a\\u043e\\u043d\\u0442\\u0435\\u043d\\u0442\"]}}]"}}, {"model": "admin.logentry", "pk": 19, "fields": {"action_time": "2021-09-16T15:34:00.907Z", "user": 1, "content_type": 11, "object_id": "2", "object_repr": "Заметки : SQL уровни изоляции транзакций", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u041a\\u043e\\u043d\\u0442\\u0435\\u043d\\u0442\"]}}]"}}, {"model": "admin.logentry", "pk": 20, "fields": {"action_time": "2021-09-17T13:51:59.579Z", "user": 1, "content_type": 9, "object_id": "4", "object_repr": "tag : Теги (общее)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 21, "fields": {"action_time": "2021-09-17T13:53:28.424Z", "user": 1, "content_type": 9, "object_id": "5", "object_repr": "tag : Программирование", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 22, "fields": {"action_time": "2021-09-17T13:53:43.049Z", "user": 1, "content_type": 9, "object_id": "6", "object_repr": "tag : mysql", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 23, "fields": {"action_time": "2021-09-17T13:54:01.742Z", "user": 1, "content_type": 9, "object_id": "7", "object_repr": "tag : Базы данных", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 24, "fields": {"action_time": "2021-09-17T13:54:09.782Z", "user": 1, "content_type": 11, "object_id": "2", "object_repr": "Заметки : SQL уровни изоляции транзакций", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u041a\\u0430\\u0442\\u0435\\u0433\\u043e\\u0440\\u0438\\u0438,\\u0442\\u0435\\u0433\\u0438\"]}}]"}}, {"model": "admin.logentry", "pk": 25, "fields": {"action_time": "2021-09-17T14:33:03.436Z", "user": 1, "content_type": 9, "object_id": "8", "object_repr": "tag : Python", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 26, "fields": {"action_time": "2021-09-17T14:33:11.657Z", "user": 1, "content_type": 11, "object_id": "3", "object_repr": "Заметки : Виртуальное окружение (Venv)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 27, "fields": {"action_time": "2021-09-17T14:39:36.898Z", "user": 1, "content_type": 11, "object_id": "4", "object_repr": "Курсы : Урок 01 | Введение в Django", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 28, "fields": {"action_time": "2021-09-17T14:59:58.514Z", "user": 1, "content_type": 11, "object_id": "5", "object_repr": "Курсы : Урок 03 | Установка Django", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 29, "fields": {"action_time": "2021-09-17T15:08:17.823Z", "user": 1, "content_type": 11, "object_id": "6", "object_repr": "Курсы : Урок 04 | Приложения в Django", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 30, "fields": {"action_time": "2021-09-17T15:09:26.191Z", "user": 1, "content_type": 11, "object_id": "7", "object_repr": "Курсы : Урок 05 | MVC в Django", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 31, "fields": {"action_time": "2021-09-17T15:25:02.230Z", "user": 1, "content_type": 11, "object_id": "8", "object_repr": "Курсы : Урок 06 | Django Контроллеры и маршруты", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 32, "fields": {"action_time": "2021-09-17T15:31:48.485Z", "user": 1, "content_type": 11, "object_id": "9", "object_repr": "Курсы : Урок 07 | Модели", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 33, "fields": {"action_time": "2021-09-17T15:37:37.058Z", "user": 1, "content_type": 11, "object_id": "10", "object_repr": "Курсы : Урок 08 | Миграции", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 34, "fields": {"action_time": "2021-09-17T15:45:42.477Z", "user": 1, "content_type": 11, "object_id": "11", "object_repr": "Курсы : Урок 08 | Миграции Media root", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 35, "fields": {"action_time": "2021-09-17T16:08:11.003Z", "user": 1, "content_type": 11, "object_id": "12", "object_repr": "Курсы : Урок 09 | Основы работы с моделями | CRUD | Часть 1", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 36, "fields": {"action_time": "2021-09-18T16:29:04.419Z", "user": 1, "content_type": 11, "object_id": "13", "object_repr": "Курсы : Урок 11 | Шаблоны", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 37, "fields": {"action_time": "2021-09-18T16:48:37.868Z", "user": 1, "content_type": 11, "object_id": "9", "object_repr": "Курсы : Урок 07 | Модели", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u041a\\u043e\\u043d\\u0442\\u0435\\u043d\\u0442\"]}}]"}}, {"model": "admin.logentry", "pk": 38, "fields": {"action_time": "2021-09-18T16:50:35.451Z", "user": 1, "content_type": 11, "object_id": "14", "object_repr": "Курсы : Урок 12 | Админка Django", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 39, "fields": {"action_time": "2021-09-18T17:00:31.933Z", "user": 1, "content_type": 11, "object_id": "14", "object_repr": "Курсы : Урок 12 | Админка Django", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u041a\\u043e\\u043d\\u0442\\u0435\\u043d\\u0442\"]}}]"}}, {"model": "admin.logentry", "pk": 40, "fields": {"action_time": "2021-09-18T17:00:37.570Z", "user": 1, "content_type": 11, "object_id": "15", "object_repr": "Курсы : Урок 13 | Связи моделей", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 41, "fields": {"action_time": "2021-09-18T17:07:14.097Z", "user": 1, "content_type": 11, "object_id": "16", "object_repr": "Курсы : Урок 15 | Директивы, теги и фильтры | Часть 1", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 42, "fields": {"action_time": "2021-09-18T17:12:38.434Z", "user": 1, "content_type": 11, "object_id": "16", "object_repr": "Курсы : Урок 15 | Директивы, теги и фильтры | Часть 1", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u041a\\u043e\\u043d\\u0442\\u0435\\u043d\\u0442\"]}}]"}}, {"model": "admin.logentry", "pk": 43, "fields": {"action_time": "2021-09-20T12:21:38.411Z", "user": 1, "content_type": 11, "object_id": "16", "object_repr": "Курсы : Урок 15 | Директивы, теги и фильтры | Часть 1", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u041a\\u043e\\u043d\\u0442\\u0435\\u043d\\u0442\"]}}]"}}, {"model": "admin.logentry", "pk": 44, "fields": {"action_time": "2021-09-20T12:38:30.992Z", "user": 1, "content_type": 11, "object_id": "17", "object_repr": "Курсы : Урок 16 | Директивы, теги и фильтры | Часть 2", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 45, "fields": {"action_time": "2021-09-20T12:46:30.877Z", "user": 1, "content_type": 11, "object_id": "18", "object_repr": "Курсы : Урок 17 | Параметры в URL запросах", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 46, "fields": {"action_time": "2021-09-20T12:51:46.868Z", "user": 1, "content_type": 11, "object_id": "19", "object_repr": "Курсы : Урок 18 | Имена маршрутов", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 47, "fields": {"action_time": "2021-09-20T13:12:36.903Z", "user": 1, "content_type": 11, "object_id": "20", "object_repr": "Курсы : Урок 19 | Наследование шаблонов", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 48, "fields": {"action_time": "2021-09-20T13:22:10.930Z", "user": 1, "content_type": 11, "object_id": "21", "object_repr": "Курсы : Урок 20 | Пользовательские теги шаблона", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 49, "fields": {"action_time": "2021-09-21T03:53:47.372Z", "user": 1, "content_type": 11, "object_id": "22", "object_repr": "Курсы : Урок 21 | Обратное разрешение адресов", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 50, "fields": {"action_time": "2021-09-21T04:22:51Z", "user": 1, "content_type": 11, "object_id": "23", "object_repr": "Курсы : Урок 22 | Статические файлы", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 51, "fields": {"action_time": "2021-09-21T06:24:54.953Z", "user": 1, "content_type": 11, "object_id": "24", "object_repr": "Курсы : Урок 23 | Работа с формами | Часть 1", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 52, "fields": {"action_time": "2021-09-21T06:25:42.907Z", "user": 1, "content_type": 11, "object_id": "24", "object_repr": "Курсы : Урок 23 | Работа с формами | Часть 1", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 53, "fields": {"action_time": "2021-09-21T06:44:50.478Z", "user": 1, "content_type": 11, "object_id": "25", "object_repr": "Курсы : Урок 24 | Работа с формами | Часть 2", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 54, "fields": {"action_time": "2021-09-21T06:55:22.065Z", "user": 1, "content_type": 11, "object_id": "26", "object_repr": "Курсы : Урок 25 | Работа с формами | Часть 3", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 55, "fields": {"action_time": "2021-09-21T06:57:48.832Z", "user": 1, "content_type": 11, "object_id": "27", "object_repr": "Курсы : Урок 26 | Кастомные валидаторы", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 56, "fields": {"action_time": "2021-09-21T07:11:55.274Z", "user": 1, "content_type": 11, "object_id": "28", "object_repr": "Курсы : Урок 27 | Класс ListView | Часть 1", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 57, "fields": {"action_time": "2021-09-21T07:17:13.461Z", "user": 1, "content_type": 11, "object_id": "29", "object_repr": "Курсы : Урок 28 | Класс ListView | Часть 2", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 58, "fields": {"action_time": "2021-09-21T07:29:04.727Z", "user": 1, "content_type": 11, "object_id": "30", "object_repr": "Курсы : Урок 29 | Класс DetailView", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 59, "fields": {"action_time": "2021-09-21T07:32:07.247Z", "user": 1, "content_type": 11, "object_id": "31", "object_repr": "Курсы : Урок 30 | Класс CreateView", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 60, "fields": {"action_time": "2021-09-21T09:09:02.538Z", "user": 1, "content_type": 11, "object_id": "32", "object_repr": "Курсы : Урок 31 | Подключение MySQL", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 61, "fields": {"action_time": "2021-09-21T09:25:17.211Z", "user": 1, "content_type": 11, "object_id": "33", "object_repr": "Курсы : Урок 32 Django ORM | Часть 1", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 62, "fields": {"action_time": "2021-09-21T09:36:26.446Z", "user": 1, "content_type": 11, "object_id": "34", "object_repr": "Курсы : Урок 33 | Django ORM | Часть 2", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 63, "fields": {"action_time": "2021-09-21T11:10:24.836Z", "user": 1, "content_type": 11, "object_id": "35", "object_repr": "Курсы : Урок 34 | Django ORM | Часть 3", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 64, "fields": {"action_time": "2021-09-21T11:30:46.977Z", "user": 1, "content_type": 11, "object_id": "36", "object_repr": "Курсы : news.get_previous_by_created_at() //--- Получает предыдущию запись по полю created_at", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 65, "fields": {"action_time": "2021-09-21T11:39:18.939Z", "user": 1, "content_type": 11, "object_id": "37", "object_repr": "Курсы : Урок 36 | Django ORM | Часть 5", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 66, "fields": {"action_time": "2021-09-21T11:56:27.431Z", "user": 1, "content_type": 11, "object_id": "38", "object_repr": "Курсы : Урок 37 | Django ORM | Часть 6 annotate", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 67, "fields": {"action_time": "2021-09-21T12:37:21.017Z", "user": 1, "content_type": 11, "object_id": "39", "object_repr": "Курсы : Урок 38 | Django ORM | Часть 7 Values , F, Database function", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 68, "fields": {"action_time": "2021-09-21T12:47:42.818Z", "user": 1, "content_type": 11, "object_id": "40", "object_repr": "Курсы : Урок 39 | Django ORM | Часть 8 SQL запросы", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 69, "fields": {"action_time": "2021-09-21T13:27:45.588Z", "user": 1, "content_type": 11, "object_id": "41", "object_repr": "Курсы : Урок 40 | Django Debug Toolbar", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 70, "fields": {"action_time": "2021-09-21T15:41:55.725Z", "user": 1, "content_type": 9, "object_id": "9", "object_repr": "tag : с++", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 71, "fields": {"action_time": "2021-09-21T15:42:16.944Z", "user": 1, "content_type": 9, "object_id": "10", "object_repr": "category : Stepik", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 72, "fields": {"action_time": "2021-09-21T15:42:43.255Z", "user": 1, "content_type": 9, "object_id": "11", "object_repr": "category : Введение в програмирование C++", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 73, "fields": {"action_time": "2021-09-21T15:50:40.642Z", "user": 1, "content_type": 11, "object_id": "42", "object_repr": "Курсы : Знакомство со средой разработки", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 74, "fields": {"action_time": "2021-09-22T08:46:14.837Z", "user": 1, "content_type": 11, "object_id": "43", "object_repr": "Курсы : Целые числа", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 75, "fields": {"action_time": "2021-09-22T09:24:43.370Z", "user": 1, "content_type": 11, "object_id": "44", "object_repr": "Курсы : Урок 41 | Кастомизация админки", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 76, "fields": {"action_time": "2021-09-22T10:01:56.900Z", "user": 1, "content_type": 11, "object_id": "45", "object_repr": "Курсы : Урок 42 | Миксины", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 77, "fields": {"action_time": "2021-09-22T10:02:11.935Z", "user": 1, "content_type": 11, "object_id": "45", "object_repr": "Курсы : Урок 42 | Миксины", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 78, "fields": {"action_time": "2021-09-22T12:26:42.581Z", "user": 1, "content_type": 11, "object_id": "46", "object_repr": "Курсы : Урок 43 | Постраничная навигация | Часть 1", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 79, "fields": {"action_time": "2021-09-22T13:18:07.776Z", "user": 1, "content_type": 11, "object_id": "47", "object_repr": "Курсы : Урок 44 | Постраничная навигация | Часть 2", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 80, "fields": {"action_time": "2021-09-22T14:13:43.373Z", "user": 1, "content_type": 11, "object_id": "48", "object_repr": "Курсы : Урок 45 | Регистрация | Часть 1", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 81, "fields": {"action_time": "2021-09-23T10:03:39.780Z", "user": 1, "content_type": 11, "object_id": "49", "object_repr": "Курсы : Урок 46 | Регистрация | Часть 2", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 82, "fields": {"action_time": "2021-09-23T13:51:35.807Z", "user": 1, "content_type": 11, "object_id": "50", "object_repr": "Курсы : Урок 47 | Авторизация", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 83, "fields": {"action_time": "2021-09-23T14:48:40.417Z", "user": 1, "content_type": 11, "object_id": "51", "object_repr": "Курсы : Урок 48 | Отправка писем на Email", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 84, "fields": {"action_time": "2021-09-23T16:01:41.361Z", "user": 1, "content_type": 11, "object_id": "52", "object_repr": "Курсы : Урок 49 | Визуальный редактор CKEditor", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 85, "fields": {"action_time": "2021-09-23T16:20:54.546Z", "user": 1, "content_type": 11, "object_id": "53", "object_repr": "Курсы : Урок 50 | Капча", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 86, "fields": {"action_time": "2021-09-23T16:43:22.731Z", "user": 1, "content_type": 11, "object_id": "54", "object_repr": "Курсы : Урок 51 | Кэширование", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 87, "fields": {"action_time": "2021-09-25T07:58:35.644Z", "user": 1, "content_type": 11, "object_id": "55", "object_repr": "Заметки : хранение дерева в БД, разбор Nested Set", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 88, "fields": {"action_time": "2021-09-25T08:34:45.021Z", "user": 1, "content_type": 11, "object_id": "56", "object_repr": "Курсы : Урок 17 | Многоуровневое меню. Часть 2", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 89, "fields": {"action_time": "2021-09-25T08:44:21.096Z", "user": 1, "content_type": 11, "object_id": "57", "object_repr": "Курсы : Урок 19 | Многоуровневое меню. Часть 3", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 90, "fields": {"action_time": "2021-09-25T09:28:44.845Z", "user": 1, "content_type": 11, "object_id": "55", "object_repr": "Заметки : хранение дерева в БД, разбор Nested Set", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u041a\\u0430\\u0442\\u0435\\u0433\\u043e\\u0440\\u0438\\u0438,\\u0442\\u0435\\u0433\\u0438\"]}}]"}}, {"model": "admin.logentry", "pk": 91, "fields": {"action_time": "2021-09-25T11:55:57.228Z", "user": 1, "content_type": 9, "object_id": "12", "object_repr": "category : Тестова", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 92, "fields": {"action_time": "2021-09-25T11:57:26.171Z", "user": 1, "content_type": 9, "object_id": "12", "object_repr": "category : Тестовая", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u0417\\u0430\\u0433\\u043e\\u043b\\u043e\\u0432\\u043e\\u043a\", \"Parent\"]}}]"}}, {"model": "admin.logentry", "pk": 93, "fields": {"action_time": "2021-09-25T11:57:52.513Z", "user": 1, "content_type": 9, "object_id": "13", "object_repr": "category : тестовая 2", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 94, "fields": {"action_time": "2021-09-25T11:59:17.400Z", "user": 1, "content_type": 9, "object_id": "11", "object_repr": "category : Введение в програмирование C++", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"level\"]}}]"}}, {"model": "admin.logentry", "pk": 95, "fields": {"action_time": "2021-09-25T11:59:59.949Z", "user": 1, "content_type": 9, "object_id": "12", "object_repr": "category : Тестовая", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 96, "fields": {"action_time": "2021-09-25T12:00:00.024Z", "user": 1, "content_type": 9, "object_id": "13", "object_repr": "category : тестовая 2", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 97, "fields": {"action_time": "2021-09-25T12:00:08.165Z", "user": 1, "content_type": 9, "object_id": "2", "object_repr": "category : Курс Django Web for my self", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"level\"]}}]"}}, {"model": "admin.logentry", "pk": 98, "fields": {"action_time": "2021-09-26T13:20:24.404Z", "user": 1, "content_type": 9, "object_id": "14", "object_repr": "category : Родитель", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 99, "fields": {"action_time": "2021-09-26T13:20:42.468Z", "user": 1, "content_type": 9, "object_id": "15", "object_repr": "category : Ребёнок", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 100, "fields": {"action_time": "2021-09-26T13:28:48.457Z", "user": 1, "content_type": 9, "object_id": "14", "object_repr": "category : Родитель", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 101, "fields": {"action_time": "2021-09-26T13:29:11.969Z", "user": 1, "content_type": 9, "object_id": "16", "object_repr": "category : Ребенок ребёнка", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 102, "fields": {"action_time": "2021-09-26T13:35:13.974Z", "user": 1, "content_type": 9, "object_id": "4", "object_repr": "tag : Теги (общее)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Parent\"]}}]"}}, {"model": "admin.logentry", "pk": 103, "fields": {"action_time": "2021-09-26T14:45:35.831Z", "user": 1, "content_type": 9, "object_id": "4", "object_repr": "tag : Теги (общее)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Parent\"]}}]"}}, {"model": "admin.logentry", "pk": 104, "fields": {"action_time": "2021-09-29T08:42:04.183Z", "user": 1, "content_type": 9, "object_id": "14", "object_repr": "category : Родитель", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 105, "fields": {"action_time": "2021-09-29T08:42:04.256Z", "user": 1, "content_type": 9, "object_id": "15", "object_repr": "category : Ребёнок", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 106, "fields": {"action_time": "2021-09-29T08:42:04.329Z", "user": 1, "content_type": 9, "object_id": "16", "object_repr": "category : Ребенок ребёнка", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 107, "fields": {"action_time": "2021-09-29T08:47:51.475Z", "user": 1, "content_type": 9, "object_id": "17", "object_repr": "category : test", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 108, "fields": {"action_time": "2021-09-29T08:48:05.004Z", "user": 1, "content_type": 11, "object_id": "58", "object_repr": "Заметки : test", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 109, "fields": {"action_time": "2021-09-29T08:48:31.371Z", "user": 1, "content_type": 9, "object_id": "17", "object_repr": "category : test", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"PostTypes\"]}}]"}}, {"model": "admin.logentry", "pk": 110, "fields": {"action_time": "2021-09-29T08:48:44.533Z", "user": 1, "content_type": 9, "object_id": "17", "object_repr": "category : test", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 111, "fields": {"action_time": "2021-09-29T08:49:02.804Z", "user": 1, "content_type": 11, "object_id": "58", "object_repr": "Заметки : test", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 112, "fields": {"action_time": "2021-09-29T08:49:25.429Z", "user": 1, "content_type": 9, "object_id": "11", "object_repr": "category : Введение в програмирование C++", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 113, "fields": {"action_time": "2021-09-29T08:49:25.501Z", "user": 1, "content_type": 9, "object_id": "10", "object_repr": "category : Stepik", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 114, "fields": {"action_time": "2021-09-29T08:49:25.571Z", "user": 1, "content_type": 9, "object_id": "3", "object_repr": "category : Habr", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 115, "fields": {"action_time": "2021-09-29T08:49:25.639Z", "user": 1, "content_type": 9, "object_id": "2", "object_repr": "category : Курс Django Web for my self", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 116, "fields": {"action_time": "2021-09-29T08:49:25.709Z", "user": 1, "content_type": 9, "object_id": "1", "object_repr": "category : Youtube", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 117, "fields": {"action_time": "2021-09-29T08:50:12.194Z", "user": 1, "content_type": 9, "object_id": "18", "object_repr": "category : Youtube", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 118, "fields": {"action_time": "2021-09-29T08:52:09.774Z", "user": 1, "content_type": 9, "object_id": "19", "object_repr": "category : Курс Django Web for My self", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 119, "fields": {"action_time": "2021-09-29T08:52:27.181Z", "user": 1, "content_type": 9, "object_id": "20", "object_repr": "category : Stepik", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 120, "fields": {"action_time": "2021-09-29T08:52:44.593Z", "user": 1, "content_type": 9, "object_id": "21", "object_repr": "category : Введение в C++", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 121, "fields": {"action_time": "2021-09-29T08:59:49.130Z", "user": 1, "content_type": 11, "object_id": "43", "object_repr": "Курсы : Целые числа", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u041a\\u0430\\u0442\\u0435\\u0433\\u043e\\u0440\\u0438\\u0438,\\u0442\\u0435\\u0433\\u0438\"]}}]"}}, {"model": "admin.logentry", "pk": 122, "fields": {"action_time": "2021-09-29T09:00:02.061Z", "user": 1, "content_type": 11, "object_id": "42", "object_repr": "Курсы : Знакомство со средой разработки", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u041a\\u0430\\u0442\\u0435\\u0433\\u043e\\u0440\\u0438\\u0438,\\u0442\\u0435\\u0433\\u0438\"]}}]"}}, {"model": "admin.logentry", "pk": 123, "fields": {"action_time": "2021-09-30T16:13:45.314Z", "user": 1, "content_type": 13, "object_id": "1", "object_repr": "note-png", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 124, "fields": {"action_time": "2021-09-30T16:13:48.164Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "note", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u0418\\u0437\\u043e\\u0431\\u0440\\u0430\\u0436\\u0435\\u043d\\u0438\\u0435\"]}}]"}}, {"model": "admin.logentry", "pk": 125, "fields": {"action_time": "2021-09-30T16:14:46.173Z", "user": 1, "content_type": 13, "object_id": "2", "object_repr": "book-png", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 126, "fields": {"action_time": "2021-09-30T16:14:47.667Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "book", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u0418\\u0437\\u043e\\u0431\\u0440\\u0430\\u0436\\u0435\\u043d\\u0438\\u0435\"]}}]"}}, {"model": "admin.logentry", "pk": 127, "fields": {"action_time": "2021-09-30T16:17:25.529Z", "user": 1, "content_type": 13, "object_id": "3", "object_repr": "курсы-png", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 128, "fields": {"action_time": "2021-09-30T16:17:29.503Z", "user": 1, "content_type": 7, "object_id": "3", "object_repr": "kursy", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u0418\\u0437\\u043e\\u0431\\u0440\\u0430\\u0436\\u0435\\u043d\\u0438\\u0435\"]}}]"}}, {"model": "admin.logentry", "pk": 129, "fields": {"action_time": "2021-09-30T16:51:30.700Z", "user": 1, "content_type": 8, "object_id": "36", "object_repr": "Курсы : Урок какой то там | Фильтры", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u0417\\u0430\\u0433\\u043e\\u043b\\u043e\\u0432\\u043e\\u043a\"]}}]"}}, {"model": "admin.logentry", "pk": 130, "fields": {"action_time": "2021-09-30T16:54:03.387Z", "user": 1, "content_type": 13, "object_id": "4", "object_repr": "MySQL_transaction", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 131, "fields": {"action_time": "2021-09-30T16:54:06.550Z", "user": 1, "content_type": 8, "object_id": "2", "object_repr": "Заметки : SQL уровни изоляции транзакций", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u0418\\u0437\\u043e\\u0431\\u0440\\u0430\\u0436\\u0435\\u043d\\u0438\\u0435\"]}}]"}}, {"model": "admin.logentry", "pk": 132, "fields": {"action_time": "2021-10-03T11:58:47.518Z", "user": 1, "content_type": 9, "object_id": "22", "object_repr": "tag : Здоровье", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 133, "fields": {"action_time": "2021-10-03T11:58:51.084Z", "user": 1, "content_type": 8, "object_id": "58", "object_repr": "Заметки : Какие продукты помогут бросить курить: рассказывают врачи", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 134, "fields": {"action_time": "2021-10-03T12:22:50.321Z", "user": 1, "content_type": 8, "object_id": "58", "object_repr": "Заметки : Какие продукты помогут бросить курить: рассказывают врачи", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u041a\\u043e\\u043d\\u0442\\u0435\\u043d\\u0442\"]}}]"}}, {"model": "admin.logentry", "pk": 135, "fields": {"action_time": "2021-10-04T02:29:54.913Z", "user": 1, "content_type": 9, "object_id": "27", "object_repr": "tag : Диета", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 136, "fields": {"action_time": "2021-10-04T02:30:42.395Z", "user": 1, "content_type": 13, "object_id": "9", "object_repr": "Холодильник против бессонницы: 5 продуктов, которые помогут заснуть", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 137, "fields": {"action_time": "2021-10-04T02:30:48.651Z", "user": 1, "content_type": 8, "object_id": "59", "object_repr": "Заметки : Холодильник против бессонницы: 5 продуктов, которые помогут заснуть", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 138, "fields": {"action_time": "2021-10-04T02:31:12.420Z", "user": 1, "content_type": 8, "object_id": "59", "object_repr": "Заметки : Холодильник против бессонницы: 5 продуктов, которые помогут заснуть", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"\\u041a\\u043e\\u043d\\u0442\\u0435\\u043d\\u0442\"]}}]"}}, {"model": "auth.user", "pk": 1, "fields": {"password": "pbkdf2_sha256$260000$Q7Z3A2gtrpqPBoXKC6bTIA$cpUzYDy6atSuyBbtry5CcOy60rqMTM13EvC861GY3YQ=", "last_login": "2021-09-29T08:39:10.522Z", "is_superuser": true, "username": "demento", "first_name": "", "last_name": "", "email": "demento174@ya.ru", "is_staff": true, "is_active": true, "date_joined": "2021-09-10T09:31:41.584Z", "groups": [], "user_permissions": []}}, {"model": "sessions.session", "pk": "3tgy14wtpilgj7un46zh555e6fj9nuto", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGlls_Kek5wzW2t7FAeRIcVIh7k4ipYBimnlv5i0irkuNa6c5jkVcBIjTb5cwP6ntoDyw3SeZp7bMY5K7Ig_a5W0q9Loe7t9BxV63teKsrVMZAw0avIVigDX6LeBZkXdMAyhvqDhTNIODcM42sQkm-GTF5wvcFzeT:1mTLKn:C2gwhxmGlfGRaEJOvrHebSzPDfUy7eay84-bfxEDAZY", "expire_date": "2021-10-07T09:48:05.078Z"}}, {"model": "sessions.session", "pk": "4vbielqalv4q3y9x97wk8448nmfhkkvh", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGlls_Kek5wzW2t7FAeRIcVIh7k4ipYBimnlv5i0irkuNa6c5jkVcBIjTb5cwP6ntoDyw3SeZp7bMY5K7Ig_a5W0q9Loe7t9BxV63teKsrVMZAw0avIVigDX6LeBZkXdMAyhvqDhTNIODcM42sQkm-GTF5wvcFzeT:1mVV7O:DpKInI-2QbjjZLCS0AVXa4Q18TCNEEgGDbcYLAUA9Tk", "expire_date": "2021-10-13T08:39:10.599Z"}}, {"model": "sessions.session", "pk": "5xka5vq5em0t7vqpc6r14ytahdp2i1dj", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGlls_Kek5wzW2t7FAeRIcVIh7k4ipYBimnlv5i0irkuNa6c5jkVcBIjTb5cwP6ntoDyw3SeZp7bMY5K7Ig_a5W0q9Loe7t9BxV63teKsrVMZAw0avIVigDX6LeBZkXdMAyhvqDhTNIODcM42sQkm-GTF5wvcFzeT:1mT288:FGIMi0PWjjVTgAMaQM31qgHsIOgzakmGVnyUwBUTQ_o", "expire_date": "2021-10-06T13:17:44.168Z"}}, {"model": "sessions.session", "pk": "64e4xf2puc7tfqjd7om94kh6e5vs943h", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGlls_Kek5wzW2t7FAeRIcVIh7k4ipYBimnlv5i0irkuNa6c5jkVcBIjTb5cwP6ntoDyw3SeZp7bMY5K7Ig_a5W0q9Loe7t9BxV63teKsrVMZAw0avIVigDX6LeBZkXdMAyhvqDhTNIODcM42sQkm-GTF5wvcFzeT:1mT1gR:frWIESwuLjyVROUzh4Ozh-FgQF6_bPWQKie-70enMts", "expire_date": "2021-10-06T12:49:07.022Z"}}, {"model": "sessions.session", "pk": "73tnm8miz30m402yt8zsngws35fiztd2", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGlls_Kek5wzW2t7FAeRIcVIh7k4ipYBimnlv5i0irkuNa6c5jkVcBIjTb5cwP6ntoDyw3SeZp7bMY5K7Ig_a5W0q9Loe7t9BxV63teKsrVMZAw0avIVigDX6LeBZkXdMAyhvqDhTNIODcM42sQkm-GTF5wvcFzeT:1mSyqy:FxQTVOl5z6akur6mkRSZnZq306Or5RUd9EkisrfDeic", "expire_date": "2021-10-06T09:47:48.180Z"}}, {"model": "sessions.session", "pk": "eourfn7v3a08ikl2jduoh1ph7usz5xmv", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGlls_Kek5wzW2t7FAeRIcVIh7k4ipYBimnlv5i0irkuNa6c5jkVcBIjTb5cwP6ntoDyw3SeZp7bMY5K7Ig_a5W0q9Loe7t9BxV63teKsrVMZAw0avIVigDX6LeBZkXdMAyhvqDhTNIODcM42sQkm-GTF5wvcFzeT:1mTPZh:18MUWXt5rbNbVz4q36g2YJ0btHruEuiytjGMd-N4Cxc", "expire_date": "2021-10-07T14:19:45.214Z"}}, {"model": "sessions.session", "pk": "ep77glyb4mmu1gccv7gkvioagp238lnq", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGlls_Kek5wzW2t7FAeRIcVIh7k4ipYBimnlv5i0irkuNa6c5jkVcBIjTb5cwP6ntoDyw3SeZp7bMY5K7Ig_a5W0q9Loe7t9BxV63teKsrVMZAw0avIVigDX6LeBZkXdMAyhvqDhTNIODcM42sQkm-GTF5wvcFzeT:1mTOcX:wrhjpucBkFJueHTTQO5LzARWfchql7GSSqYwBdTQ6xI", "expire_date": "2021-10-07T13:18:37.825Z"}}, {"model": "sessions.session", "pk": "fgtv1h537x515rku586uw8y2600y3syg", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGlls_Kek5wzW2t7FAeRIcVIh7k4ipYBimnlv5i0irkuNa6c5jkVcBIjTb5cwP6ntoDyw3SeZp7bMY5K7Ig_a5W0q9Loe7t9BxV63teKsrVMZAw0avIVigDX6LeBZkXdMAyhvqDhTNIODcM42sQkm-GTF5wvcFzeT:1mSeYR:JiO81xXQYq1g-gzsI6k1aY1BNQhB8_NH0lCL8qDvifo", "expire_date": "2021-10-05T12:07:19.788Z"}}, {"model": "sessions.session", "pk": "frpdafwvl6ztbyhak4vh60v1fopv1eaa", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGlls_Kek5wzW2t7FAeRIcVIh7k4ipYBimnlv5i0irkuNa6c5jkVcBIjTb5cwP6ntoDyw3SeZp7bMY5K7Ig_a5W0q9Loe7t9BxV63teKsrVMZAw0avIVigDX6LeBZkXdMAyhvqDhTNIODcM42sQkm-GTF5wvcFzeT:1mOct1:09av7uxOmcBSpshJlHIl0xY26p9BL6-W3nNbhsRzQ28", "expire_date": "2021-09-24T09:31:55.497Z"}}, {"model": "sessions.session", "pk": "rfhlzzqbzx22mu6mlful859mtyj14bqh", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGlls_Kek5wzW2t7FAeRIcVIh7k4ipYBimnlv5i0irkuNa6c5jkVcBIjTb5cwP6ntoDyw3SeZp7bMY5K7Ig_a5W0q9Loe7t9BxV63teKsrVMZAw0avIVigDX6LeBZkXdMAyhvqDhTNIODcM42sQkm-GTF5wvcFzeT:1mTRZb:Gr4AthXi4fC4nmANSeakmfdmzISJ725QGPiVbbsXhV0", "expire_date": "2021-10-07T16:27:47.719Z"}}, {"model": "sessions.session", "pk": "uj1tmjduns1ni1ceomq88ygmejp0n6wi", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGlls_Kek5wzW2t7FAeRIcVIh7k4ipYBimnlv5i0irkuNa6c5jkVcBIjTb5cwP6ntoDyw3SeZp7bMY5K7Ig_a5W0q9Loe7t9BxV63teKsrVMZAw0avIVigDX6LeBZkXdMAyhvqDhTNIODcM42sQkm-GTF5wvcFzeT:1mT2NJ:UkN-fyquYoZ0Rz9HPo4W_tOwJhQ6GiGQudGimqS7gbw", "expire_date": "2021-10-06T13:33:25.575Z"}}, {"model": "sessions.session", "pk": "uuyt2inf0j3wbisz5idlrpksegn14tep", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGlls_Kek5wzW2t7FAeRIcVIh7k4ipYBimnlv5i0irkuNa6c5jkVcBIjTb5cwP6ntoDyw3SeZp7bMY5K7Ig_a5W0q9Loe7t9BxV63teKsrVMZAw0avIVigDX6LeBZkXdMAyhvqDhTNIODcM42sQkm-GTF5wvcFzeT:1mREFq:zaw7lR83UdCkdrwpfDedcoEfC5LTgZQHyoYlXZcBPWw", "expire_date": "2021-10-01T13:50:14.383Z"}}, {"model": "sessions.session", "pk": "uzrphm7suhldpbwq4b6qkfhf49b6n34i", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGlls_Kek5wzW2t7FAeRIcVIh7k4ipYBimnlv5i0irkuNa6c5jkVcBIjTb5cwP6ntoDyw3SeZp7bMY5K7Ig_a5W0q9Loe7t9BxV63teKsrVMZAw0avIVigDX6LeBZkXdMAyhvqDhTNIODcM42sQkm-GTF5wvcFzeT:1mT2AJ:3EWkwcwfx-RHkRm6ffHI7V3CcF0DjSQ2benFdDDBMLg", "expire_date": "2021-10-06T13:19:59.995Z"}}, {"model": "sessions.session", "pk": "x5o1e20nbl214p0w7f0nrggotvp41jud", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGlls_Kek5wzW2t7FAeRIcVIh7k4ipYBimnlv5i0irkuNa6c5jkVcBIjTb5cwP6ntoDyw3SeZp7bMY5K7Ig_a5W0q9Loe7t9BxV63teKsrVMZAw0avIVigDX6LeBZkXdMAyhvqDhTNIODcM42sQkm-GTF5wvcFzeT:1mT0ne:ry4bb1EGOB305p21oJ7Vr_EK7SsCA1M9FCse6HETz8I", "expire_date": "2021-10-06T11:52:30.084Z"}}, {"model": "sessions.session", "pk": "z84ti1sf50jnzi4y10l447je8hualoeq", "fields": {"session_data": ".eJxVjDsOwjAQRO_iGlls_Kek5wzW2t7FAeRIcVIh7k4ipYBimnlv5i0irkuNa6c5jkVcBIjTb5cwP6ntoDyw3SeZp7bMY5K7Ig_a5W0q9Loe7t9BxV63teKsrVMZAw0avIVigDX6LeBZkXdMAyhvqDhTNIODcM42sQkm-GTF5wvcFzeT:1mT1dt:K0lHWxa0tXRBOwvu2Ra_-JHehvmbkMf_gHVwUbZmdVo", "expire_date": "2021-10-06T12:46:29.464Z"}}, {"model": "wordpress.types", "pk": 1, "fields": {"title": "Заметки", "slug": "note", "image": 1}}, {"model": "wordpress.types", "pk": 2, "fields": {"title": "Книги", "slug": "book", "image": 2}}, {"model": "wordpress.types", "pk": 3, "fields": {"title": "Курсы", "slug": "kursy", "image": 3}}, {"model": "wordpress.entities", "pk": 2, "fields": {"type": 1, "title": "SQL уровни изоляции транзакций", "slug": "sql-urovni-izolyacii-tranzakcij", "content": "<p>https://habr.com/ru/post/135217/</p>\r\n\r\n<p>Дана таблица созданная коммандой:<br />\r\n<span style=\"color:#ffffff\"><strong><span style=\"background-color:#1abc9c\">CREATE TABLE test ( id INT, value (varchar(255))&nbsp;) ENGINE=InnoDB</span></strong></span></p>\r\n\r\n<p>При разных уровнях изоляции транзакций следющий запрос находящийся в транзакции&nbsp;покажет разные данные.</p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">START TRANSACTION;</span></span></strong></p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">INSERT INTO test(id,value) VALUES (1, &#39;test&#39;) ,(2, &#39;test 2&#39;)</span></span></strong></p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">SELECT * FROM test;</span></span></strong></p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">COMMIT;</span></span></strong></p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">SELECT * FROM test;</span></span></strong></p>\r\n\r\n<p>При <strong>READ UNCOMMITTED:</strong></p>\r\n\r\n<p>После INSERT данные сражу будут доступны для чтения. То есть ещё до вызова COMMIT. Это называется dirty read (грязное чтение). Оно редко используется.</p>\r\n\r\n<p>При <strong>READ COMMITTED</strong>:</p>\r\n\r\n<p>Данные можно будет прочитать только после COMMIT, то есть первый SELECT нечего не вернёт, тк таблица ещё пустая и транзакция не подтверждена.</p>\r\n\r\n<p>При <strong>REPEATABLE READ</strong>:</p>\r\n\r\n<p>Этот уровень используется по умолчанию в MySQL. При этом режиме возможно чтение транзакций внутри самой транзакции.<br />\r\nНо здесь возможно теоритическая проблема фантомного чтения. Когда внутри транзакции происходит чтение данных, другая транзакция вставляет новые данные, а первая снова читает те же самые данные.</p>\r\n\r\n<p>И при последнем <strong>SERIALIZABLE</strong>:&nbsp;</p>\r\n\r\n<p>На данном уровне MySQL блокирует каждую строку над которой происходит действие, это исключает проблемы фантомов. Использовать этот уровень нет смысла, так как InnoDB и мнее популярный Falcon решуют эту проблему.</p>\r\n\r\n<p><strong>Увидеть текуший уровень ихоляции:</strong></p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">SHOW VARIABLES LIKE &#39;%tx_isolation%&#39;</span></span></strong></p>\r\n\r\n<p><strong>Установить:</strong></p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;</span></span></strong></p>", "image": null, "created_at": "2021-09-16T15:27:57.427Z", "updated_at": "2021-10-04T03:51:38.990Z", "terms": [5, 6, 7]}}, {"model": "wordpress.entities", "pk": 3, "fields": {"type": 1, "title": "Виртуальное окружение (Venv)", "slug": "virtualnoe-okruzhenie-venv", "content": "<p>Виртуальное окружение позволяет содержать разные проекты python в песочницах, оставляя их со своими зависимости, не затрагивая зависимости из вне.</p>\r\n\r\n<h2><span style=\"font-size:20px\"><strong>Устройство виртуальных окружений</strong></span></h2>\r\n\r\n<p>Каждое виртуальное окружение представляет собой директорию структура которой напоминает общесистемное окружение&nbsp; - поддериктории соотвественно названы и наполнены.</p>\r\n\r\n<pre>\r\n<code>$ tree env\r\nenv\r\n├── bin\r\n│&nbsp;&nbsp; ├── activate\r\n│   &hellip;\r\n│&nbsp;&nbsp; ├── pip\r\n│&nbsp;&nbsp; &hellip;\r\n│&nbsp;&nbsp; └── python3 -&gt; &hellip;/python3\r\n├── lib\r\n│&nbsp;&nbsp; └── python3.6\r\n│&nbsp;&nbsp;     └── site-packages\r\n│&nbsp;&nbsp;         ├── pip\r\n│&nbsp;&nbsp;         │&nbsp;&nbsp; ├── &hellip;\r\n│           &hellip;\r\n│&nbsp;&nbsp;         └── setuptools-40.6.2.dist-info\r\n│&nbsp;&nbsp;          &nbsp;&nbsp; ├── &hellip;</code></pre>\r\n\r\n<p><span style=\"font-family:monospace\">В директории виртуального окружения находится директория bin внутри которой назолится копия или символическая ссылка на интропритатор python3, а рядом с ней копия исполняемого файла pip. В соседней директории lib/python3.6/site-package находятся библиотеки, уже установленные в окружение, как правило венв сразу ставит pip. А исполняемый файл bin/pip его точка входа, а так же пакет setuptools - эти два пакета составляют минимум для начала разработки на python.&nbsp;</span></p>\r\n\r\n<p>При работе в венв, нужно запускать не системные python и pip, а исполняемые файлы из директории bin. Когда python находится в виртуальном окружении, он знает, что все доступные пакеты находятся в данном окружении по пути ../lib/python3.6. И копия pip из этого окружения устанавливает пакеты в это же окружение, не затрагивая внешнию среду.</p>\r\n\r\n<h2><span style=\"font-size:20px\"><strong>Создание виртуального окружения</strong></span></h2>\r\n\r\n<p>Накатить на сервер venv можно командой:</p>\r\n\r\n<pre>\r\n<strong><span style=\"color:#ffffff\"><code><span style=\"background-color:#1abc9c\">$ sudo apt install python3-venv</span></code></span></strong></pre>\r\n\r\n<p>Проверить, что модуль установлен и готов к испльзованию:</p>\r\n\r\n<pre>\r\n<strong><span style=\"color:#ffffff\"><code><span style=\"background-color:#1abc9c\">$ python3 -m venv --help</span></code></span></strong></pre>\r\n\r\n<p><span style=\"font-family:monospace\">Создание виртуального окружения:</span></p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">python3 -m venv [&nbsp;имя_окружения ]</span></span></strong></p>\r\n\r\n<p>При установке приложения в bin виртуального окружения, его нужно будет запускать либо с полной директории, типа&nbsp;first_venv/bin/cowsay, или активировать&nbsp; venv.</p>\r\n\r\n<h2><strong><span style=\"font-size:20px\">Активация окружения</span></strong></h2>\r\n\r\n<p>Для Linux:</p>\r\n\r\n<pre>\r\n<strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">$ source project/bin/activate</span></span></strong></pre>\r\n\r\n<p>Для Windows:</p>\r\n\r\n<pre>\r\n<strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">$ project\\Scripts\\activate.bat</span></span></strong></pre>\r\n\r\n<p>Деактивая окружения:</p>\r\n\r\n<pre>\r\n<strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">deactivate</span></span></strong></pre>\r\n\r\n<p>&nbsp;</p>", "image": null, "created_at": "2021-09-17T14:33:11.654Z", "updated_at": "2021-09-17T14:33:11.654Z", "terms": [5, 8]}}, {"model": "wordpress.entities", "pk": 4, "fields": {"type": 3, "title": "Урок 01 | Введение в Django", "slug": "urok-01-vvedenie-v-django", "content": "<p>Фреймворк&nbsp;&nbsp;Django взял своё название от музыканта Джанго Рейнхардт.</p>\r\n\r\n<p>Джанго принято называть MTV (Модель, шаблон, представление),&nbsp;а не MVC (Модель, Вид, Контроллер)</p>", "image": null, "created_at": "2021-09-17T14:39:36.896Z", "updated_at": "2021-09-17T14:39:36.896Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 5, "fields": {"type": 3, "title": "Урок 03 | Установка Django", "slug": "urok-03-ustanovka-django", "content": "<p><strong>1) </strong>Активируем Виртуальное окружение в проекте</p>\r\n\r\n<p><strong>2) <span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">pip install Django</span></span> </strong>// -- Установка Джанго в виртуальное окружение</p>\r\n\r\n<p><strong>3)<span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">django-admin startproject [ название проекта ]&nbsp;</span></span></strong>&nbsp;// -- Создание проекта</p>\r\n\r\n<p><strong>4)<span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">django-admin runserver [ port number, default:8000&nbsp;]&nbsp;</span></span></strong> // -- Запуск сервера Джанго</p>\r\n\r\n<p>&nbsp;</p>", "image": null, "created_at": "2021-09-17T14:59:58.513Z", "updated_at": "2021-09-17T14:59:58.513Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 6, "fields": {"type": 3, "title": "Урок 04 | Приложения в Django", "slug": "urok-04-prilozheniya-v-django", "content": "<p><strong>Философия Джанго в том что бы приложения были как можно менее связаны с друг другом.</strong></p>\r\n\r\n<p><strong>1)<span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">python manage.py startapp [ название приложения&nbsp;]</span></span></strong> //--- Создание приложения</p>\r\n\r\n<p><strong>2)</strong> регистрируем приложение в settings.py в массив&nbsp; INSTALLED_APPS</p>\r\n\r\n<p><strong>3) </strong>В папке приложения есть файл apps.py класс [названи приложения]Config, при регистрации приложения в settings можно указать путь к этому классу, то есть например news.apps.NewsConfig</p>", "image": null, "created_at": "2021-09-17T15:08:17.822Z", "updated_at": "2021-09-17T15:08:17.822Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 7, "fields": {"type": 3, "title": "Урок 05 | MVC в Django", "slug": "urok-05-mvc-v-django", "content": "<p>MVC = MTV</p>\r\n\r\n<p>Model = Model</p>\r\n\r\n<p>View = Template</p>\r\n\r\n<p>Controller = View</p>", "image": null, "created_at": "2021-09-17T15:09:26.189Z", "updated_at": "2021-09-17T15:09:26.189Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 8, "fields": {"type": 3, "title": "Урок 06 | Django Контроллеры и маршруты", "slug": "urok-06-django-kontrollery-i-marshruty", "content": "<p>Контроллеры находятся в файле views.py в папке приложения.</p>\r\n\r\n<p>Все функции-контроллеры должны обязательно принимать request, в нём собраные все данные о сервере: Сессии, куки и тд.</p>\r\n\r\n<p>from django.http import HttpResponse //-- данная функция позволяет контроллеру возвращаться строку в качестве ответа</p>\r\n\r\n<p>def index(request):</p>\r\n\r\n<p>&nbsp; &nbsp; return HttpResponse(&#39;Hello world&#39;)</p>\r\n\r\n<p>Для вывода контроллера в URL, в файле urls.py в папке настроек приложения нужно подключить новое приложение</p>\r\n\r\n<p>from news.views import index //-- импорт контроллера</p>\r\n\r\n<p>urlpatterns = [</p>\r\n\r\n<p>&nbsp; &nbsp; path(&#39;admin/&#39;, admin.site.urls),</p>\r\n\r\n<p>&nbsp; &nbsp; path(&#39;news/&#39;,index)&nbsp;//-- подключени контроллера</p>\r\n\r\n<p>]</p>\r\n\r\n<p>Так же можно подключить маршруты через файл urls.py из папки приложения. Этого файла по умолчанию нет, его нужно создавать,он должен отдавать так же как массив, такого же вида как и файл с папки настроек&nbsp;:</p>\r\n\r\n<p>from django.urls import path, include</p>\r\n\r\n<p>urlpatterns = [</p>\r\n\r\n<p>&nbsp; &nbsp; path(&#39;admin/&#39;, admin.site.urls),</p>\r\n\r\n<p>&nbsp; &nbsp; path(&#39;news/&#39;,include(&#39;news.urls&#39;))&nbsp;//-- подключени контроллера</p>\r\n\r\n<p>]</p>", "image": null, "created_at": "2021-09-17T15:25:02.228Z", "updated_at": "2021-09-17T15:25:02.228Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 9, "fields": {"type": 3, "title": "Урок 07 | Модели", "slug": "urok-07-modeli", "content": "<p>Модели создаются в файле <span style=\"color:#ffffff\"><strong><span style=\"background-color:#16a085\">model.py</span></strong></span> в папке приложения. Они описывются классами.&nbsp;</p>\r\n\r\n<p><span style=\"color:#ffffff\"><strong><span style=\"background-color:#d35400\">from django.db import models</span></strong></span></p>\r\n\r\n<p><span style=\"color:#ffffff\"><strong><span style=\"background-color:#d35400\">class&nbsp; News(models.Model):</span></strong></span></p>\r\n\r\n<p><span style=\"color:#ffffff\"><strong><span style=\"background-color:#d35400\">&nbsp; &nbsp; title = models.CharField(max_lenght=150, verbose_name=&quot;Заголовок&quot;)</span></strong></span></p>\r\n\r\n<p><span style=\"color:#ffffff\"><strong><span style=\"background-color:#d35400\">&nbsp; &nbsp; content =&nbsp;models.TextField(blank=True, verbose_name=&quot;Контент&quot;) //-- blank дает возможность не заполнять поле</span></strong></span></p>\r\n\r\n<p><span style=\"color:#ffffff\"><strong><span style=\"background-color:#d35400\">&nbsp; &nbsp; created_at = models.DateTimeField(auto_now_add=True, verbose_name=&quot;Дата создания&quot;)</span></strong></span></p>\r\n\r\n<p><span style=\"color:#ffffff\"><strong><span style=\"background-color:#d35400\">&nbsp; &nbsp; updated_at =&nbsp;models.DateTimeField(auto_now=True, verbose_name=&quot;Дата публикации&quot;)</span></strong></span></p>\r\n\r\n<p><span style=\"color:#ffffff\"><strong><span style=\"background-color:#d35400\">&nbsp; &nbsp; photo = models.ImageField(upload_to = &#39;photos/%Y/%m/%d&#39;, verbose_name=&quot;Фото&quot;)</span></strong></span></p>\r\n\r\n<p><span style=\"color:#ffffff\"><strong><span style=\"background-color:#d35400\">&nbsp; &nbsp; is_published = models.BooleanField(default=True, verbose_name=&quot;Опубликовано?&quot;)&nbsp;</span></strong></span></p>\r\n\r\n<p><span style=\"color:#000000\">В модели можно прописать название модели для админки в единственном числе и множественном, так же ордировку по умолчанию</span></p>\r\n\r\n<p><span style=\"color:#000000\">это делается в подкалссе META:</span></p>\r\n\r\n<p><span style=\"color:#000000\">class News(models.Model):</span></p>\r\n\r\n<p><span style=\"color:#000000\">&nbsp; &nbsp; &nbsp;....</span></p>\r\n\r\n<p><span style=\"color:#000000\">&nbsp; &nbsp; class Meta:</span></p>\r\n\r\n<p><span style=\"color:#000000\">&nbsp; &nbsp; &nbsp; &nbsp; verbose_name=&#39;Новость&#39;</span></p>\r\n\r\n<p><span style=\"color:#000000\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"color:#000000\">verbose_name_plural=&#39;Новости&#39;</span></p>\r\n\r\n<p><span style=\"color:#000000\">&nbsp; &nbsp; &nbsp; &nbsp; ordering = [&#39;-created_at&#39;,&#39;title&#39;]</span></p>\r\n\r\n<p><span style=\"color:#000000\">Так же название нужно изменить в файле apps.py</span></p>\r\n\r\n<p><span style=\"color:#000000\">from django.apps import AppConfig</span></p>\r\n\r\n<p>class NewsConfig(AppConfig):</p>\r\n\r\n<p>&nbsp; &nbsp; name = &#39;news&#39;</p>\r\n\r\n<p>&nbsp; &nbsp; verbose_name = &#39;Новость&#39;</p>\r\n\r\n<p>&nbsp; &nbsp;&nbsp;verbose_name_plural = &#39;Новости&#39;</p>", "image": null, "created_at": "2021-09-17T15:31:48.483Z", "updated_at": "2021-09-18T16:48:37.867Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 10, "fields": {"type": 3, "title": "Урок 08 | Миграции", "slug": "urok-08-migracii", "content": "<p>Миграции после их выполнения появляются в папке migrations в корне приложения</p>\r\n\r\n<p>python manage.py makemigrations&nbsp; //--- Создание миграций</p>\r\n\r\n<p>python manage.py sqlmigrate [ названия модуля&nbsp;] [ порядковый номер миграции&nbsp;] //---покажет SQL запрос миграции</p>\r\n\r\n<p>python manage.py migrate //-- выполняет миграции</p>\r\n\r\n<p>Найстройки SQL делаются в массиве DATABASES в файле settings</p>", "image": null, "created_at": "2021-09-17T15:37:37.056Z", "updated_at": "2021-09-17T15:37:37.056Z", "terms": [5, 7, 8, 18, 19]}}, {"model": "wordpress.entities", "pk": 11, "fields": {"type": 3, "title": "Урок 08 | Миграции Media root", "slug": "urok-08-migracii-media-root", "content": "<p>&nbsp;</p>\r\n\r\n<p>Папка для всех медиа&nbsp; файлов указывается в файле settings в константе MEDIA_ROOT, там же указывается url для всех медиа через константу MEDIA_URL:</p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">MEDIA_ROOT = os.path.join(BASE_DIR, &#39;media&#39;)</span></span></strong></p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">MEDIA_URL = &#39;/media/&#39;</span></span></strong></p>\r\n\r\n<p>Так же в отладочном режиме, в urls корневого модуля нужно задать папку для вывода медиа контента:<br />\r\n&nbsp;</p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">from django.conf.settings import settings</span></span></strong></p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">from django.conf.urls.static import static</span></span></strong></p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">if settings.DEBUG:</span></span></strong></p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">&nbsp; &nbsp; urlpatterns +=static(settings.MEDIA_URL, document_root = settings.MEDIA_ROOT)</span></span></strong></p>", "image": null, "created_at": "2021-09-17T15:45:42.474Z", "updated_at": "2021-09-17T15:45:42.474Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 12, "fields": {"type": 3, "title": "Урок 09 | Основы работы с моделями | CRUD | Часть 1", "slug": "urok-09-osnovy-raboty-s-modelyami-crud-chast-1", "content": "<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">ptyhon manage.py shell</span></span></strong> //--- запуск консоли Джанго</p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">from ne&nbsp;ws.models import News</span></span></strong></p>\r\n\r\n<p><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\"><strong>news =&nbsp; News.objects.all()</strong> </span></span>//-- Получается все записи</p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">for item in news:</span></span></strong></p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">&nbsp; &nbsp;print(item.title)</span></span> </strong>//-- выведит каждый заголовок записи</p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">News.objects.create(title=&#39;title&#39;,content=&#39;content&#39;) </span></span></strong>//-- создание записи</p>\r\n\r\n<p><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">News.objects.filter(title=&#39;title&#39;)</span></span> //-- вернёт массив записей по заданным параметрам</p>\r\n\r\n<p><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">_news = News.objects.get(pk=1) </span></span>//-- вернёт 1 запись по заданному параметру ( ID == 1 ), при ненахождении выкидывает исключение</p>\r\n\r\n<p><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">_news.title = &#39;Измененый заголовок&#39; </span></span>//--- Изменение записи</p>\r\n\r\n<p><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">_news.title.save()&nbsp;</span></span>//--- Сохранение</p>\r\n\r\n<p><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">_news.delete()</span></span><span style=\"background-color:#1abc9c\"> </span>//-- Удаление записи</p>\r\n\r\n<p><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">News.objects.order_by(&#39;title&#39;)</span></span> //-- выводит все записи в определённой сортировке</p>\r\n\r\n<p><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">News.objects.order_by(&#39;-title&#39;)</span></span> //-- выводит все записи в определённой сортировке, в обратном порядке</p>\r\n\r\n<p><span style=\"color:#ffffff\"><span style=\"background-color:#1abc9c\">News.objects.exclude(title=&#39;News 5&#39;)</span></span> //-- выводит все записи Кроме указанной</p>", "image": null, "created_at": "2021-09-17T16:08:11.001Z", "updated_at": "2021-09-17T16:08:11.001Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 13, "fields": {"type": 3, "title": "Урок 11 | Шаблоны", "slug": "urok-11-shablony", "content": "<p>Шаблоны по умолчанию находятся в папке templates в папке приложения, так же желательно добавлять в папку templates ещё 1 папку с названием приложения, для того что бы не запутаться в именах. То есть например:<br />\r\n<strong><span style=\"color:#ffffff\"><span style=\"background-color:#3498db\">| [&nbsp; notepad&nbsp;]</span></span></strong></p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#3498db\">|&nbsp; &nbsp;[ notepad ]</span></span></strong></p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#3498db\">|&nbsp; &nbsp; [ news ]</span></span></strong></p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#3498db\">|&nbsp; &nbsp; &nbsp; &nbsp; [ template ]</span></span></strong></p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#3498db\">&nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;[ news ]</span></span></strong></p>\r\n\r\n<p><strong><span style=\"color:#ffffff\"><span style=\"background-color:#3498db\">&nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;[ index.html ]&nbsp;&nbsp;</span></span></strong></p>\r\n\r\n<p><em><strong>Если джанго не может найти шаблон, то его нужно добавить в settings в массив TEPLATES[&#39;DIRS&#39;],&nbsp;</strong></em></p>\r\n\r\n<p>Для вызова шаблона напрямую нужно вызвать функцию render</p>\r\n\r\n<p><span style=\"color:#ffffff\"><strong><span style=\"background-color:#1abc9c\">from django.shortcuts import render</span></strong></span></p>\r\n\r\n<p><span style=\"color:#ffffff\"><strong><span style=\"background-color:#1abc9c\">def index(request):</span></strong></span></p>\r\n\r\n<p><span style=\"color:#ffffff\"><strong><span style=\"background-color:#1abc9c\">&nbsp; &nbsp; news = News.objects.all()</span></strong></span></p>\r\n\r\n<p><span style=\"color:#ffffff\"><strong><span style=\"background-color:#1abc9c\">&nbsp; &nbsp; return render(request, template_name=&#39;news/index.html&#39;, context={&#39;title&#39;=&gt;1,})</span></strong></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>В шаблоне переменные выводятся в {{&nbsp; }}, например <span style=\"color:#ffffff\"><strong><span style=\"background-color:#1abc9c\">{{ title }}</span></strong></span></p>\r\n\r\n<p><span style=\"color:#ffffff\"><strong><span style=\"background-color:#1abc9c\">{% for item in news %}&nbsp; {{ item.title }}&nbsp;{% endfor %} </span></strong></span>//--- цикл for</p>\r\n\r\n<p><span style=\"color:#ffffff\"><strong><span style=\"background-color:#1abc9c\">{{ item.created_at | date: &quot;Y-m-d&quot; }} </span></strong></span>//--- вывод даты по фильтру</p>", "image": null, "created_at": "2021-09-18T16:29:04.417Z", "updated_at": "2021-09-18T16:29:04.417Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 14, "fields": {"type": 3, "title": "Урок 12 | Админка Django", "slug": "urok-12-adminka-django", "content": "<p>python manage.py createsuperuser //--- создние пользователя для админки</p>\r\n\r\n<p>Для вывода приложение в админку, нужно прописать его в файле admin.py в папке приложения.</p>\r\n\r\n<p>from django.contrib import admin</p>\r\n\r\n<p>from .models import News</p>\r\n\r\n<p>admin.site.register(News)</p>\r\n\r\n<p>Для более гибкого редактирования, лучше использовать классы:</p>\r\n\r\n<pre>\r\nclass TypesAdmin(admin.ModelAdmin):\r\n    list_display = (&#39;id&#39;,&#39;title&#39;,&#39;slug&#39;) //-- какие поля показывать\r\n    list_display_links = (&#39;id&#39;,&#39;title&#39;)//-- какие поля ссылки\r\n    search_fields = (&#39;title&#39;,&#39;slug&#39;)//-- По каким полям делать поиск\r\n    list_filter = (&#39;id&#39;, &#39;title&#39;)//-- По каким полям делать фильтрацию\r\n&nbsp;   list_editable = (&#39;is_published&#39;)//-- Даёт возможность редактировать поля в списке записей\r\n\r\n    prepopulated_fields = {&quot;slug&quot;: (&quot;title&quot;,)}//-- По каким полям делать автозаполнение slug\r\n\r\nadmin.site.register(Types, TypesAdmin)</pre>", "image": null, "created_at": "2021-09-18T16:50:35.449Z", "updated_at": "2021-09-18T17:00:31.930Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 15, "fields": {"type": 3, "title": "Урок 13 | Связи моделей", "slug": "urok-13-svyazi-modelej", "content": "<p>Всего 3 типа связей моделей:<br />\r\nForeignKey, OneToOne, ManyToMany</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>class News(models.Model):</p>\r\n\r\n<p>&nbsp; &nbsp; category = models.ForeignKey(&#39;Category&#39;, on_delete=models.PROTECT,null=True,default=1)</p>\r\n\r\n<p>class Category(models.Model):</p>\r\n\r\n<p>&nbsp; &nbsp; title = models.CharField(max-lenght=150)</p>", "image": null, "created_at": "2021-09-18T17:00:37.567Z", "updated_at": "2021-09-18T17:00:37.567Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 16, "fields": {"type": 3, "title": "Урок 15 | Директивы, теги и фильтры | Часть 1", "slug": "urok-15-direktivy-tegi-i-filtry-chast-1", "content": "<p>{% autoescape on %}{% endautoescape %} //-- экранирует HTML теги</p>\r\n\r\n<p>{% comment %}{% endcomment %} //-- комментарий</p>\r\n\r\n<p>{% csrf_token&nbsp;%} //--- для работы с формами</p>\r\n\r\n<p>{% cycle &#39;row1&#39;&nbsp;&#39;row2&#39; %} //-- Используется в for для вывода на каждую итерацию, разное значение</p>\r\n\r\n<p>{% for item in items&nbsp;%}{% endfor %} //-- цикл for</p>\r\n\r\n<p>{% if&nbsp;%}{%&nbsp; endif %}&nbsp;//-- без комментариев</p>\r\n\r\n<p>{% now &quot;Y-m-d&quot;&nbsp;%} //-- выведит сегодняшнию дату&nbsp;</p>\r\n\r\n<p>{% spaceless&nbsp;%}{%endspaceless%} //-- сжимает html</p>\r\n\r\n<p>{{ img.url }}&nbsp;&nbsp;//-- Выводим url изображения</p>", "image": null, "created_at": "2021-09-18T17:07:14.095Z", "updated_at": "2021-09-20T12:21:38.409Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 17, "fields": {"type": 3, "title": "Урок 16 | Директивы, теги и фильтры | Часть 2", "slug": "urok-16-direktivy-tegi-i-filtry-chast-2", "content": "<p>{{&nbsp; 5|add:&quot;2&quot;&nbsp;}} //-- фильтер сложения прибавит, выведет 7</p>\r\n\r\n<p>{{&nbsp; news.count }}&nbsp;//-- фильтер count выводит количество элементов в данном массиве</p>\r\n\r\n<p>{{ value | cut: &quot; &quot;&nbsp;}}&nbsp;//--удаляет значения из строки, в данном примере удалит все пробелы</p>", "image": null, "created_at": "2021-09-20T12:38:30.990Z", "updated_at": "2021-09-20T12:38:30.990Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 18, "fields": {"type": 3, "title": "Урок 17 | Параметры в URL запросах", "slug": "urok-17-parametry-v-url-zaprosah", "content": "<p>Для передачи параметра в URL его нужно описать в массиве urlpatterns&nbsp;</p>\r\n\r\n<p>from .views import get_category, index</p>\r\n\r\n<p>urlpatterns&nbsp; = [</p>\r\n\r\n<p>&nbsp; &nbsp; path(&#39; &#39;,index),</p>\r\n\r\n<p>&nbsp; &nbsp; path(&#39;category/<strong>&lt;int:category_id&gt;</strong>/&#39;,get_category)</p>\r\n\r\n<p>]</p>\r\n\r\n<p>----------------------------------------------------------</p>\r\n\r\n<p>view.py</p>\r\n\r\n<p>get_category(request,category_id):</p>\r\n\r\n<p>&nbsp; &nbsp; pass</p>", "image": null, "created_at": "2021-09-20T12:46:30.875Z", "updated_at": "2021-09-20T12:46:30.875Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 19, "fields": {"type": 3, "title": "Урок 18 | Имена маршрутов", "slug": "urok-18-imena-marshrutov", "content": "<p>В массиве URL маршрутам можно задавать имена. И далее их использовать.</p>\r\n\r\n<p>urlpatterns = [&nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; path(&#39;&#39;,index,name=&#39;home&#39;)</p>\r\n\r\n<p>]</p>\r\n\r\n<p>в шаблоне для вызова url нужно использовать тег {% url &#39;same_url&#39; v1 %}</p>\r\n\r\n<p>&nbsp;</p>", "image": null, "created_at": "2021-09-20T12:51:46.865Z", "updated_at": "2021-09-20T12:51:46.865Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 20, "fields": {"type": 3, "title": "Урок 19 | Наследование шаблонов", "slug": "urok-19-nasledovanie-shablonov", "content": "<p>&nbsp;За счёт наследование шаблонов, лучше использовать базовый шаблон base.html. И уже от него наследоваться всем остальным шаблонам</p>\r\n\r\n<p>{% extends &quot;base.html&quot;&nbsp;%}</p>\r\n\r\n<p>Так же используется система блоков, если не поменять содержимое блока, то выведится содержимое блока родителя. Так же можно вывести содержимое родительского блока за счет block.super</p>\r\n\r\n<p>{% block title %}Заголовок сайта{%endblock%}</p>\r\n\r\n<p>Тег include работает так же как и везде просто подключая содержимое указанного файла:</p>\r\n\r\n<p>{%&nbsp; include &quot;inc/_nav.html&quot; %}</p>\r\n\r\n<p>Если джанго не сможет найти шаблоны, добавъ путь к ним в массив TEMPLATES[&#39;DIRS&#39;]</p>", "image": null, "created_at": "2021-09-20T13:12:36.901Z", "updated_at": "2021-09-20T13:12:36.901Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 21, "fields": {"type": 3, "title": "Урок 20 | Пользовательские теги шаблона", "slug": "urok-20-polzovatelskie-tegi-shablona", "content": "<p>Есть 2 вида кастомных тегов:</p>\r\n\r\n<p>Simple tags : простые теги, описывают какой то функционал</p>\r\n\r\n<p>inclusion tags : теги которые подключают и сразу рендерят шаблоны</p>\r\n\r\n<p>Все теги следует размещать в папке templatetags, и скорее всего его нужно будет добавить в список&nbsp;TEMPLATES[&#39;libraries&#39;], название тега по ключу в данном списке</p>\r\n\r\n<p>в созданной папке templatetags создаёи питоновский файл с именем как название тега</p>\r\n\r\n<pre>\r\nfrom django import template\r\nfrom news.models import Category\r\n\r\nregister = template.Library()\r\n\r\n@register.simple_tag\r\ndef get_categories():\r\n    return Category.objects.all()\r\n\r\n@register.inclusion_tag(&#39;news/tags/list_categories.html&#39;)\r\ndef show_categories():\r\n    return {&#39;categories&#39; : Category.objects.all() }</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Останется только подключить в шаблоне новые теги c помощью {% load news_tags %}</p>\r\n\r\n<p>&nbsp;</p>", "image": null, "created_at": "2021-09-20T13:22:10.927Z", "updated_at": "2021-09-20T13:22:10.927Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 22, "fields": {"type": 3, "title": "Урок 21 | Обратное разрешение адресов", "slug": "urok-21-obratnoe-razreshenie-adresov", "content": "<p>Для присвоения определённым записям ссылок, моделям эих записей нужно добавить метод get_absolute_url:</p>\r\n\r\n<p>from django.urls import reverse</p>\r\n\r\n<pre>\r\nclass Category(models.Model):\r\n    title = models.CharField(max_length=150, db_index=True, verbose_name=&#39;Наименование категории&#39;)\r\n\r\n    def get_absolute_url(self):\r\n        return reverse(&#39;category&#39;, kwargs={&#39;category_id&#39;: self.pk})</pre>", "image": null, "created_at": "2021-09-21T03:53:47.370Z", "updated_at": "2021-09-21T03:53:47.370Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 23, "fields": {"type": 3, "title": "Урок 22 | Статические файлы", "slug": "urok-22-staticheskie-fajly", "content": "<p>Все статичные файлы нужно распологать в папке&nbsp;static в модулях проекта.</p>\r\n\r\n<p>STATIC_URL = За префикс&nbsp; в url&nbsp; подключаемых статичных файлов отвечает эта&nbsp;глобальная переменная</p>\r\n\r\n<p>STATIC_ROOT = os.path.join(BASE_DIR, &#39;static&#39;) //-- указывает директорию куда собирается и вся статика со всех модулей после комманды collectstatic</p>\r\n\r\n<p>STATICFILES_DIRS = [os.path.join(BASE_DIR,&#39;mysite/static&#39;)] //-- дополнительные папки со статикой</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>pythom manage.py collectstatic //--- сбор статики</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Для подключения в шаблоне&nbsp;</p>\r\n\r\n<p>{% load static %}</p>\r\n\r\n<p>&lt;link rel=&quot;stylesheet&quot; href=&quot;{% static &#39;bootstap/css/bootstap.min.css&#39; %}&quot;&gt;</p>\r\n\r\n<p>&nbsp;</p>", "image": null, "created_at": "2021-09-21T04:22:50.998Z", "updated_at": "2021-09-21T04:22:50.998Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 24, "fields": {"type": 3, "title": "Урок 23 | Работа с формами | Часть 1", "slug": "urok-23-rabota-s-formami-chast-1", "content": "<p>Backend работа с формами, производится в файле forms.py в папке модуля проекта, дале будет приведен пример класса формы НЕ на основе модели.</p>\r\n\r\n<pre>\r\nclass NewsFormWithoutModel(forms.Form):\r\n    title = forms.CharField(max_length=150, label=&#39;Название&#39;, widget=forms.TextInput(attrs={&#39;class&#39;:&#39;form-control&#39;}))\r\n    content = forms.CharField(label=&#39;Контент&#39;, required=False, widget=forms.Textarea(attrs={&#39;class&#39;:&#39;form-control&#39;,&#39;rows&#39;:5}))\r\n    is_published = forms.BooleanField(label=&#39;Опубликованно?&#39;, initial=True)\r\n    category = forms.ModelChoiceField(\r\n        queryset=Category.objects.all(),\r\n        label=&#39;Категория&#39;,\r\n        empty_label=&#39;Выберите категорию&#39;,\r\n        widget=forms.Select(attrs={&#39;class&#39;:&#39;form-control&#39;})\r\n    )</pre>\r\n\r\n<p>Для обработки формы, её нужно прописать в контроллере, котоырй подключается к пути:</p>\r\n\r\n<pre>\r\ndef add_news(request):\r\n    if request.method == &#39;POST&#39;:\r\n        form = NewsForm(request.POST)\r\n        if form.is_valid():\r\n            news = form.save()\r\n            return redirect(news.get_absolute_url())\r\n    else:\r\n        form = NewsForm()\r\n    return render(request, &#39;news/add_news.html&#39;,{&#39;form&#39;:form})</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Для&nbsp; вывода формы в шаблоне нужно следующее:</p>\r\n\r\n<p>&lt;form action=&quot;{%&nbsp;url &#39;add_news&#39; %}&quot;&nbsp; method=&quot;post&quot;&gt;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp;{{ form.as_p&nbsp;}}</p>\r\n\r\n<p>&lt;buttom&gt; Добавить новость&lt;/button&gt;</p>\r\n\r\n<p>&lt;/form&gt;</p>", "image": null, "created_at": "2021-09-21T06:24:54.950Z", "updated_at": "2021-09-21T06:25:42.906Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 25, "fields": {"type": 3, "title": "Урок 24 | Работа с формами | Часть 2", "slug": "urok-24-rabota-s-formami-chast-2", "content": "<p>Есть возмодность выводить каждое поле по отдельности в шаблоне:</p>\r\n\r\n<pre>\r\n&lt;div class=&quot;mb-3 form-group&quot;&gt;\r\n    &lt;label for=&quot;{{form.title.id_for_label }}&quot; class=&quot;form-label&quot;&gt;{{ form.title.label }}&lt;/label&gt;\r\n    {{ form.title }}\r\n    &lt;div class=&quot;invalid-feedback&quot;&gt;\r\n        {{ form.title.errors }}\r\n    &lt;/div&gt;\r\n&lt;/div&gt;</pre>\r\n\r\n<p>Ошибки валидации которые связанные с невидимыми полями или общие ошибки формы выводятся тегом:</p>\r\n\r\n<p>{{ form.non_field.errors&nbsp;}}</p>\r\n\r\n<p>класс который используется для поля указывается в атриббуте widget:</p>\r\n\r\n<pre>\r\ntitle = forms.CharField(max_length=150, label=&#39;Название&#39;, widget=forms.TextInput(attrs={&#39;class&#39;:&#39;form-control&#39;}))</pre>\r\n\r\n<p>Для сохранения данных в форме необходимо её вызвать с сохраняемыми данными в контроллере, так же там же можно выполнить проверку на валидацию:</p>\r\n\r\n<pre>\r\ndef add_news(request):\r\n    if request.method == &#39;POST&#39;:\r\n        form = NewsForm(request.POST)\r\n        if form.is_valid():\r\n            news = form.save()\r\n            return redirect(news.get_absolute_url())\r\n    else:\r\n        form = NewsForm()</pre>", "image": null, "created_at": "2021-09-21T06:44:50.477Z", "updated_at": "2021-09-21T06:44:50.477Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 26, "fields": {"type": 3, "title": "Урок 25 | Работа с формами | Часть 3", "slug": "urok-25-rabota-s-formami-chast-3", "content": "<p>Так же создание формы возможно по классу который создает их на основе моделей:</p>\r\n\r\n<pre>\r\nclass NewsForm(forms.ModelForm):\r\n\r\n    def clean_title(self)://--- Дополнительный метод обрабатывающий определенное поле формы при сохранении\r\n        title = self.cleaned_data[&#39;title&#39;]\r\n\r\n        if re.match(r&#39;\\d&#39;, title):\r\n            raise ValidationError(&#39;Название не должно начинаться с цифры&#39;)\r\n        return title\r\n\r\n    class Meta:\r\n        model = News\r\n        fields = [&#39;title&#39;, &#39;content&#39;, &#39;is_published&#39;, &#39;category&#39;] //-- возмодно указать __all__\r\n        widgets = {\r\n            &#39;title&#39;:forms.TextInput(attrs={&#39;class&#39;:&#39;form-control&#39;}),\r\n            &#39;content&#39;:forms.Textarea(attrs={&#39;class&#39;:&#39;form-control&#39;,&#39;rows&#39;:5}),\r\n            &#39;category&#39;:forms.Select(attrs={&#39;class&#39;:&#39;form-control&#39;}),\r\n        }</pre>\r\n\r\n<p>При такой реализации созранение созданной записи в контроллере производится следующим образом:</p>\r\n\r\n<p>form - NewsForm(request.POST)</p>\r\n\r\n<p>if form.is_valid():</p>\r\n\r\n<p>news = form.save()</p>\r\n\r\n<p>redirect(news)</p>", "image": null, "created_at": "2021-09-21T06:55:22.064Z", "updated_at": "2021-09-21T06:55:22.064Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 27, "fields": {"type": 3, "title": "Урок 26 | Кастомные валидаторы", "slug": "urok-26-kastomnye-validatory", "content": "<pre>\r\nfrom django.core.exceptions import ValidationError</pre>\r\n\r\n<pre>\r\nclass NewsForm(forms.ModelForm):\r\n\r\n    def clean_title(self):\r\n\r\n        title = self.cleaned_data[&#39;title&#39;]\r\n\r\n        if re.match(r&#39;\\d&#39;, title):\r\n            raise ValidationError(&#39;Название не должно начинаться с цифры&#39;)\r\n        return title\r\n\r\n    class Meta:\r\n        model = News\r\n        fields = [&#39;title&#39;, &#39;content&#39;, &#39;is_published&#39;, &#39;category&#39;]\r\n        widgets = {\r\n            &#39;title&#39;:forms.TextInput(attrs={&#39;class&#39;:&#39;form-control&#39;}),\r\n            &#39;content&#39;:forms.Textarea(attrs={&#39;class&#39;:&#39;form-control&#39;,&#39;rows&#39;:5}),\r\n            &#39;category&#39;:forms.Select(attrs={&#39;class&#39;:&#39;form-control&#39;}),\r\n        }</pre>", "image": null, "created_at": "2021-09-21T06:57:48.830Z", "updated_at": "2021-09-21T06:57:48.830Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 28, "fields": {"type": 3, "title": "Урок 27 | Класс ListView | Часть 1", "slug": "urok-27-klass-listview-chast-1", "content": "<p>Контроллеры так же можно описывать классами. Для работы со списком моделей принято использовать класс ListView:</p>\r\n\r\n<pre>\r\nfrom django.views.generic import ListView</pre>\r\n\r\n<pre>\r\nclass HomeNews(ListView):\r\n    model = News\r\n    template_name = &#39;news/index.html&#39; //--- по дефолту будет искать news/news_list.html\r\n    context_object_name = &#39;news&#39;//--- название переменной в шаблоне, по дефолту object_list\r\n    extra_context = {&#39;title&#39;: &#39;Новости&#39;} #static data  //--- Используется для статических данных\r\n    allow_empty = False //--- Запрешает пустые\r\n\r\n    def get_context_data(self, *, object_list=None, **kwargs)://--- Метод для дополнительного получения данных\r\n        context = super().get_context_data(**kwargs)\r\n        context[&#39;subtitle&#39;] = &#39;Main page for news&#39;\r\n        return context\r\n\r\n    def get_queryset(self):\r\n        return News.objects.filter(is_published=True)</pre>\r\n\r\n<p>При использование класса его вид записи в массиве url принимает следующий вид:</p>\r\n\r\n<p>path(&#39;&#39;,HomeViews.as_view(),name=&quot;home&quot;)</p>", "image": null, "created_at": "2021-09-21T07:11:55.273Z", "updated_at": "2021-09-21T07:11:55.273Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 29, "fields": {"type": 3, "title": "Урок 28 | Класс ListView | Часть 2", "slug": "urok-28-klass-listview-chast-2", "content": "<p>В данном уроке переписали страницу вывода записей по категориям:</p>\r\n\r\n<pre>\r\nclass NewsByCategory(ListView):\r\n    model = Category\r\n    template_name = &#39;news/category.html&#39;\r\n    context_object_name = &#39;categories&#39;\r\n    allow_empty = False\r\n\r\n\r\n    def get_context_data(self, *, object_list=None, **kwargs):\r\n        context = super().get_context_data(**kwargs)\r\n        print(context)\r\n        context[&#39;title&#39;] = Category.objects.get(pk=self.kwargs[&#39;category_id&#39;])\r\n        return context\r\n\r\n    def get_queryset(self):\r\n        return News.objects.filter(category_id=self.kwargs[&#39;category_id&#39;],is_published=True)</pre>\r\n\r\n<p>Так же ниже приведен пример как можно передать параметры в urls.py:</p>\r\n\r\n<pre>\r\npath(&#39;category/&lt;int:category_id&gt;&#39;, NewsByCategory.as_view(extra_content={&#39;title&#39;:&#39;Какой то заголовок&#39;}), name=&#39;category&#39;),</pre>", "image": null, "created_at": "2021-09-21T07:17:13.459Z", "updated_at": "2021-09-21T07:17:13.459Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 30, "fields": {"type": 3, "title": "Урок 29 | Класс DetailView", "slug": "urok-29-klass-detailview", "content": "<p>Для вывода контекста 1 записи используется контроллер наследуемый от DetailView:</p>\r\n\r\n<pre>\r\nfrom django.views.generic import DetailView</pre>\r\n\r\n<pre>\r\nclass ViewNews(DetailView):\r\n    model = News\r\n    template_name = &#39;news/single_news.html&#39;\r\n    # pk_url_kwarg = &#39;news_id&#39;//--- название параметра который будет передоваться и по которому будет идти поиск записи\r\n    context_object_name = &#39;news&#39;</pre>", "image": null, "created_at": "2021-09-21T07:29:04.723Z", "updated_at": "2021-09-21T07:29:04.723Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 31, "fields": {"type": 3, "title": "Урок 30 | Класс CreateView", "slug": "urok-30-klass-createview", "content": "<p>Для обработки шаблонов на создание записей, используют контроллеры наследуемые от CreateView:</p>\r\n\r\n<pre>\r\nfrom django.views.generic import CreateView</pre>\r\n\r\n<pre>\r\nclass CreateNews(CreateView):\r\n    form_class = NewsForm\r\n    template_name = &#39;news/add_news.html&#39;\r\n    # success_url = reverse_lazy(&#39;home&#39;)//--- параметр куда делать редирект после созранения формы</pre>", "image": null, "created_at": "2021-09-21T07:32:07.245Z", "updated_at": "2021-09-21T07:32:07.245Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 32, "fields": {"type": 3, "title": "Урок 31 | Подключение MySQL", "slug": "urok-31-podklyuchenie-mysql", "content": "<p>При подключении MySQL к джанго есть пара нюансов. При установке драйвера mysq для питона, на линукс предварительно нужно накатить другие пакеты:&nbsp;</p>\r\n\r\n<p>sudo apt-get install python3.8-dev libmysqlclient-dev<br />\r\nПосле устанавливаем сам пакет драйвера</p>\r\n\r\n<p>&nbsp;pip install mysqlclient</p>\r\n\r\n<p>Далее меняем настройки в settings у массива DATABASE:</p>\r\n\r\n<pre>\r\n&#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,\r\n&#39;OPTIONS&#39;: {\r\n    &#39;database&#39; : &#39;django_lessons&#39;,\r\n    &#39;user&#39; : &#39;root&#39;,\r\n    &#39;password&#39; : &#39;HardPassword1984!&#39;,\r\n},</pre>\r\n\r\n<p>Выполняем миграцию и всё</p>", "image": null, "created_at": "2021-09-21T09:09:02.536Z", "updated_at": "2021-09-21T09:09:02.536Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 33, "fields": {"type": 3, "title": "Урок 32 Django ORM | Часть 1", "slug": "urok-32-django-orm-chast-1", "content": "<p>News.objects.order_by(&#39;pk&#39;) //--- получает записи в указанной сортировке</p>\r\n\r\n<p>News.objects.all().reverse() //--- получает все записи, но в обратном порядке от дефолтного</p>\r\n\r\n<p>News.objects.get(pk=1) //--- получает 1 запись по заданому параметку, если не находит запись или больше чем 1, то выкинет ошибку</p>\r\n\r\n<p>cat = Category.objects.all()</p>\r\n\r\n<p>cat.news_set.all() //-- получает все связанные модели Новостей с текущей категорией, работает если не назначена related_name у модели</p>", "image": null, "created_at": "2021-09-21T09:25:17.208Z", "updated_at": "2021-09-21T09:25:17.208Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 34, "fields": {"type": 3, "title": "Урок 33 | Django ORM | Часть 2", "slug": "urok-33-django-orm-chast-2", "content": "<p>Entry.objects.filter(id__gt=4) //-- получит все записи у которых id больше чем 4 | SELECT ... WHERE id &gt; 4;</p>\r\n\r\n<p>Entry.objects.filter(id__gte=4) //-- получит все записи у которых id больше или равно&nbsp;4 | SELECT ... WHERE id &gt;= 4;</p>\r\n\r\n<p>Entry.objects.filter(title__contains=&#39;Lenon&#39;) //-- получит все записи у которых title содержит слово вхождение строки Lenon, регистрозависимый&nbsp;| SELECT ... WHERE title LIKE &#39;%Lenon%&#39;;</p>\r\n\r\n<p>Entry.objects.filter(title__icontains=&#39;Lenon&#39;) //-- получит все записи у которых title содержит слово вхождение строки Lenon, регистронезависимый&nbsp;| SELECT ... WHERE title ILIKE &#39;%Lenon%&#39;;</p>\r\n\r\n<p>Entry.objects.filter(id__in=[1,4,6]) //-- Осуществляет поиск в данном диапозоне | SELECT ... WHERE id IN (1,4,6);</p>", "image": null, "created_at": "2021-09-21T09:36:26.444Z", "updated_at": "2021-09-21T09:36:26.444Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 35, "fields": {"type": 3, "title": "Урок 34 | Django ORM | Часть 3", "slug": "urok-34-django-orm-chast-3", "content": "<p>Entity.objects.first() //--- Получит первую запись из бд, то есть последнюю с конца по дате создания</p>\r\n\r\n<p>Entity.objects.order_by(&#39;pk&#39;).first() //--- Получит первую запись из бд по id</p>\r\n\r\n<p>Entity.objects.last()&nbsp;//--- Получает последнюю запись из БД</p>\r\n\r\n<p>Entity.objects.earliest(&#39;updated_at&#39;) //--- получит самую ранюю запись по указанному полю</p>\r\n\r\n<p>Entity.objects.latest(&#39;updated_at&#39;) //--- получит самую позднюю&nbsp;запись по указанному полю</p>\r\n\r\n<p>cat = Category.objects.get(pk=5)</p>\r\n\r\n<p>cat.news_set.exists() //--- Проверяет есть ли записи в запросе или нет. Возвращает True или False</p>\r\n\r\n<p>cat.news_set.count() //--- Возвращает количество записей в запросе</p>\r\n\r\n<p>news = News.objects.get(pk=4)&nbsp;</p>\r\n\r\n<p>news.get_previous_by_created_at() //--- Получает предыдущию запись по полю created_at</p>\r\n\r\n<p>news.get_next_by_created_at() //--- Получает следующую запись по полю created_at</p>\r\n\r\n<p>&nbsp;</p>", "image": null, "created_at": "2021-09-21T11:10:24.834Z", "updated_at": "2021-09-21T11:10:24.834Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 36, "fields": {"type": 3, "title": "Урок какой то там | Фильтры", "slug": "newsget_previous_by_created_at-poluchaet-predydushiyu-zapis-po-polyu-created_at", "content": "<p>News.objects.filter(category__title=&quot;Политика&quot;) //-- Получит все новости из категории Политика</p>\r\n\r\n<p>Category.objects.filter(news__title__contains = &quot;Формы&quot;) //-- Получит все категории в которых содержатся записи в названии которых есть слово &quot;Формы&quot;</p>\r\n\r\n<p>Category.objects.filter(news__title__contains = &quot;Формы&quot;).distinct() //-- Получит только уникальные значения</p>\r\n\r\n<p>Для более гибкого использования операторов И ( &amp;&nbsp;), ИЛИ ( |&nbsp;), НЕ ( ~ ) используют модуль Q</p>\r\n\r\n<p>from django.db.models import Q</p>\r\n\r\n<p>News.objects.filter( Q( pk__in=[5,6] ) |&nbsp; Q( title__contains=&quot;2&quot; )&nbsp; &amp;&nbsp; ~Q(pk__gt=4) )</p>", "image": null, "created_at": "2021-09-21T11:30:46.975Z", "updated_at": "2021-09-30T16:51:30.687Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 37, "fields": {"type": 3, "title": "Урок 36 | Django ORM | Часть 5", "slug": "urok-36-django-orm-chast-5", "content": "<p>News.objects.all()[:3] //--- Получает первые три записи с конца</p>\r\n\r\n<p>News.objects.all()[10:] //--- Получает все записи кроме первых 10 с конца&nbsp;</p>\r\n\r\n<p>News.objects.all()[3:5] //--- Получает все записи после 3 и по 5-ю включительно</p>\r\n\r\n<p><strong>Агрегатные функции -&nbsp;&nbsp;</strong>Позволяет вычислить какое либо значение по определённой колонке</p>\r\n\r\n<p>from django.db.models import *</p>\r\n\r\n<p>News.objects.aggregate( Min(&#39;views&#39;), Max(&#39;vews&#39;)&nbsp;)</p>", "image": null, "created_at": "2021-09-21T11:39:18.937Z", "updated_at": "2021-09-21T11:39:18.937Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 38, "fields": {"type": 3, "title": "Урок 37 | Django ORM | Часть 6 annotate", "slug": "urok-37-django-orm-chast-6-annotate", "content": "<p>from django.models import count</p>\r\n\r\n<p>cats = Category.objects.annotate(max_views=Max(&quot;news__views&quot;)) //--- Получит категории с параметром max_views&nbsp; в котором будет храниться максимально количество просмотров у связанных записей</p>", "image": null, "created_at": "2021-09-21T11:56:27.429Z", "updated_at": "2021-09-21T11:56:27.429Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 39, "fields": {"type": 3, "title": "Урок 38 | Django ORM | Часть 7 Values , F, Database function", "slug": "urok-38-django-orm-chast-7-values-f-database-function", "content": "<p>News.objects.values(&#39;title&#39;,&#39;content&#39;).get(pk=1) // --- Получит только указанные колонки у запрашиваемой записи</p>\r\n\r\n<p>News.objects.values(&#39;title&#39;,&#39;content&#39;,&#39;category__title&#39;)&nbsp;&nbsp;// --- Получит все новости, с заголовком записи категории привязаной к записи</p>\r\n\r\n<p>--------------------------------------------------------------------------------------------------------------</p>\r\n\r\n<p>В запросах для обхода проблемы фантомного чтения исползуется класс F</p>\r\n\r\n<p>from django.db.models import F</p>\r\n\r\n<p>news = News.object.get(pk=1)</p>\r\n\r\n<p>news.views = F (&#39;views&#39;)+1 //-- Данная запись прибавит к значению один, даже если это значение в данный момент ктото перезщаписал в другом потоке</p>\r\n\r\n<p>News.objects.filter(content__icontains=F(&#39;title&#39;)) //--</p>\r\n\r\n<p>--------------------------------------------------------------------------------------------------------------</p>\r\n\r\n<p>Функции Базы Данных нужны что бы выполнять вычесления на стороне БД, что зачастую является приоритетней</p>\r\n\r\n<p>from django.db.models.functions import Length</p>\r\n\r\n<p>news = News.objects.annotate(length=Length(&#39;title&#39;)).all() //-- получит все записи и добавит к каждой аргумент legth в котором будет храниться длина title</p>\r\n\r\n<p>&nbsp;</p>", "image": null, "created_at": "2021-09-21T12:37:21.015Z", "updated_at": "2021-09-21T12:37:21.015Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 40, "fields": {"type": 3, "title": "Урок 39 | Django ORM | Часть 8 SQL запросы", "slug": "urok-39-django-orm-chast-8-sql-zaprosy", "content": "<p>News.objects.raw(&quot;SELECT * FROM news_news&quot;)&nbsp;//--- Так же как и обычный запрос получит все записи. Но вместа массива QuerySet будет RawQuerySet, если происходит выборка определённых полей, то обязательно нужно указывать ID</p>\r\n\r\n<p>News.objects.raw(&quot;SELECT * FROM news_news WHERE title=%s&quot;,[&#39;News 5&#39;]) //--- Запрос через параметры, помогает предовратить SQL инъекцию&nbsp;</p>", "image": null, "created_at": "2021-09-21T12:47:42.815Z", "updated_at": "2021-09-21T12:47:42.815Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 41, "fields": {"type": 3, "title": "Урок 40 | Django Debug Toolbar", "slug": "urok-40-django-debug-toolbar", "content": "<p>&nbsp;Накатывает пакет django-debug-toolbar</p>\r\n\r\n<p>Смотрим дубли запросов, и смотрим откуда они берутся</p>\r\n\r\n<p>В случаи большого кол-ва дублей, используем select_related</p>\r\n\r\n<p>News.objects.filter(is_publishe=True).select_related(&#39;category&#39;)</p>", "image": null, "created_at": "2021-09-21T13:27:45.586Z", "updated_at": "2021-09-21T13:27:45.586Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 42, "fields": {"type": 3, "title": "Знакомство со средой разработки", "slug": "znakomstvo-so-sredoj-razrabotki", "content": "<p>#include &lt;iostream&gt; //---&nbsp;include это подключение &lt;iostream&gt; это название библиотеки ввода и вывода данных</p>\r\n\r\n<p>using namespace std; //--- подключение пространства имён, как я понял оно упрощает написание функций</p>\r\n\r\n<p>int main() {&nbsp; &nbsp;//--- int говорит о том что эта функция должна возвращать число</p>\r\n\r\n<p>&nbsp; &nbsp; // это комментарий, здесь можно писать пояснения &nbsp; &nbsp;</p>\r\n\r\n<p>cout &lt;&lt; &quot;Hello, World!&quot;;&nbsp;//--- cout это console output объект вывода на экран, &lt;&lt; означает поместить что то в предыдущий объект&nbsp;</p>\r\n\r\n<p>return 0;&nbsp;//--- Если всё хорошо то функция возвращает 0, в остальных случаях что то другое</p>\r\n\r\n<p>}</p>", "image": null, "created_at": "2021-09-21T15:50:40.625Z", "updated_at": "2021-09-29T09:00:02.039Z", "terms": [9, 20, 21]}}, {"model": "wordpress.entities", "pk": 43, "fields": {"type": 3, "title": "Целые числа", "slug": "celye-chisla", "content": "<p>#include &lt;iostream&gt;</p>\r\n\r\n<p>using namespace std;</p>\r\n\r\n<p>int main() {</p>\r\n\r\n<p>&nbsp; &nbsp; cout &lt;&lt; (2 + 3) * 5; &nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; return 0;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>Обозначение операции&emsp;&emsp;&emsp;&emsp;Что она выполняет</p>\r\n\r\n<p>&emsp;&emsp;&emsp;&emsp;&emsp;+&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;сложение</p>\r\n\r\n<p>&emsp;&emsp;&emsp;&emsp;&emsp;&minus;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;вычитание</p>\r\n\r\n<p>&emsp;&emsp;&emsp;&emsp;&emsp;*&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;умножение</p>\r\n\r\n<p>&emsp;&emsp;&emsp;&emsp;&emsp;/&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;деление нацело</p>\r\n\r\n<p>&emsp;&emsp;&emsp;&emsp;&emsp;%&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;вычисление остатка от деления</p>\r\n\r\n<p>int x, y; //--- присвоение переменных</p>\r\n\r\n<p>#include &lt;iostream&gt;</p>\r\n\r\n<p>using namespace std;</p>\r\n\r\n<p>int main() { &nbsp; &nbsp;</p>\r\n\r\n<p>int a, b; &nbsp; &nbsp;</p>\r\n\r\n<p>cin &gt;&gt; a &gt;&gt; b;&nbsp; &nbsp;//--- пример ввода чисел cin это console input</p>\r\n\r\n<p>cout &lt;&lt; a + b; &nbsp; &nbsp;</p>\r\n\r\n<p>return 0;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>Тип integer вмещает в себя числа от минус 2 милиардов до двух милиардов</p>\r\n\r\n<p>Пример конкатинации:</p>\r\n\r\n<p>#include &lt;iostream&gt; using namespace std; int main() { &nbsp; &nbsp; &nbsp; int a, b; &nbsp; &nbsp; &nbsp; cin &gt;&gt; a &gt;&gt; b; &nbsp; &nbsp; &nbsp; cout &lt;&lt; a &lt;&lt; &quot; + &quot; &lt;&lt; b &lt;&lt; &quot; = &quot; &lt;&lt; a + b &lt;&lt; endl; &nbsp; &nbsp; &nbsp; cout &lt;&lt; a &lt;&lt; &quot; - &quot; &lt;&lt; b &lt;&lt; &quot; = &quot; &lt;&lt; a - b; &nbsp; &nbsp; &nbsp; return 0; }</p>\r\n\r\n<p>&nbsp;</p>", "image": null, "created_at": "2021-09-22T08:46:14.818Z", "updated_at": "2021-09-29T08:59:49.108Z", "terms": [9, 20, 21]}}, {"model": "wordpress.entities", "pk": 44, "fields": {"type": 3, "title": "Урок 41 | Кастомизация админки", "slug": "urok-41-kastomizaciya-adminki", "content": "<p>Кастомизация админки выполняется засчёт переопределения шаблонов, которые находятся по пути /venv/Lib/site-packages/django/contrib/admin/templates/admin/base_site.html</p>\r\n\r\n<p>Таким образом если в зарегестрированной папке templates создать папку admin с файлом админки, то мы её переопределим</p>\r\n\r\n<p>в шаблоне сайта base_site.html, подключение css происходит через блок {% block&nbsp;extrastyle %}&nbsp;</p>\r\n\r\n<p>Переопределение заголовка в админке (Администрирование Django), и других переменных админ части&nbsp;можно сделать в файле admin.py в директории с настройками сайта:</p>\r\n\r\n<p>admin.site.site_title = &quot;Custom header&quot;</p>\r\n\r\n<p>Для костамизации колонки вывода в админке можно определить дополнительный метод для вывода нужной колонки:</p>\r\n\r\n<p>from django.utils.safestring import mark_safe</p>\r\n\r\n<p>class NewsAdmin (admin.ModelAdmin):</p>\r\n\r\n<p>&nbsp; &nbsp; list_display= (&quot;id&quot;, &quot;title&quot;, &quot;get_photo&quot;)</p>\r\n\r\n<p>&nbsp; &nbsp; def get_photo(self, obj):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if obj.photo.url:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return mark_safe(f&#39;&lt;img srtc=&quot;obj.photo.url&quot;&gt;&#39;)</p>\r\n\r\n<p>&nbsp; &nbsp;get_photo.short_description = &quot;Миниатюра&quot;</p>\r\n\r\n<p>Для костамизации полей которые выводятся внутри новости, используется fields, если есть поля которые используются только для чтения, то они указываются в readonly_fields</p>\r\n\r\n<p>class NewsAdmin (admin.ModelAdmin):</p>\r\n\r\n<p>&nbsp; &nbsp; list_display= (&quot;id&quot;, &quot;title&quot;, &quot;get_photo&quot;)</p>\r\n\r\n<p>&nbsp; &nbsp; fields = (&quot;title&quot;, &quot;category&quot;, &quot;photo&quot;)</p>\r\n\r\n<p>&nbsp; &nbsp; readonly_fields = (&quot;get_photo&quot;, &quot;created_at&quot;)</p>\r\n\r\n<p>&nbsp; &nbsp; def get_photo(self, obj):</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if obj.photo.url:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return mark_safe(f&#39;&lt;img srtc=&quot;obj.photo.url&quot;&gt;&#39;)</p>\r\n\r\n<p>&nbsp; &nbsp;get_photo.short_description = &quot;Миниатюра&quot;</p>", "image": null, "created_at": "2021-09-22T09:24:43.351Z", "updated_at": "2021-09-22T09:24:43.351Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 45, "fields": {"type": 3, "title": "Урок 42 | Миксины", "slug": "urok-42-miksiny", "content": "<p>При использовании миксинов, более значемые классы нужно определять раньше.</p>\r\n\r\n<p>Миксины модуля обычно создаются в файле utils.</p>\r\n\r\n<p>есть куча встроенных микснов или их аналогов для функций - декораторов. Например @login_required или LoginRequiredMixin</p>\r\n\r\n<p>Проверка на авторизацию пользователя делается через request.user.is_authenticated</p>", "image": null, "created_at": "2021-09-22T10:01:56.881Z", "updated_at": "2021-09-22T10:02:11.923Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 46, "fields": {"type": 3, "title": "Урок 43 | Постраничная навигация | Часть 1", "slug": "urok-43-postranichnaya-navigaciya-chast-1", "content": "<pre>\r\n&gt;&gt;&gt; from django.core.paginator import Paginator //--- class Paginator\r\n&gt;&gt;&gt; objects = [&#39;john&#39;, &#39;paul&#39;, &#39;george&#39;, &#39;ringo&#39;] //--- example object\r\n&gt;&gt;&gt; p = Paginator(objects, 2) //---  second parametr is count objects on page</pre>\r\n\r\n<pre>\r\n&gt;&gt;&gt; p.count //--- count objects\r\n4\r\n&gt;&gt;&gt; p.num_pages //--- count pages\r\n2</pre>\r\n\r\n<pre>\r\n&gt;&gt;&gt; page1 = p.page(1) //--- get page for her number </pre>\r\n\r\n<pre>\r\n&gt;&gt;&gt; page1.object_list //--- object list\r\n[&#39;john&#39;, &#39;paul&#39;]</pre>\r\n\r\n<p>Для подключения к классу наследуемому от ListView:</p>\r\n\r\n<pre>\r\nclass ContactListView(ListView):\r\n    paginate_by = 2\r\n    model = Contact</pre>\r\n\r\n<p>------------------------------------------------------------------------------------------------------------</p>\r\n\r\n<p>Пример вывода в шаблоне</p>\r\n\r\n<pre>\r\n{% for contact in page_obj %}\r\n    {# Each &quot;contact&quot; is a Contact model object. #}\r\n    {{ contact.full_name|upper }}&lt;br&gt;\r\n    ...\r\n{% endfor %}\r\n\r\n&lt;div class=&quot;pagination&quot;&gt;\r\n    &lt;span class=&quot;step-links&quot;&gt;\r\n        {% if page_obj.has_previous %}\r\n            &lt;a href=&quot;?page=1&quot;&gt;&amp;laquo; first&lt;/a&gt;\r\n            &lt;a href=&quot;?page={{ page_obj.previous_page_number }}&quot;&gt;previous&lt;/a&gt;\r\n        {% endif %}\r\n\r\n        &lt;span class=&quot;current&quot;&gt;\r\n            Page {{ page_obj.number }} of {{ page_obj.paginator.num_pages }}.\r\n        &lt;/span&gt;\r\n\r\n        {% if page_obj.has_next %}\r\n            &lt;a href=&quot;?page={{ page_obj.next_page_number }}&quot;&gt;next&lt;/a&gt;\r\n            &lt;a href=&quot;?page={{ page_obj.paginator.num_pages }}&quot;&gt;last &amp;raquo;&lt;/a&gt;\r\n        {% endif %}\r\n    &lt;/span&gt;\r\n&lt;/div&gt;</pre>", "image": null, "created_at": "2021-09-22T12:26:42.561Z", "updated_at": "2021-09-22T12:26:42.561Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 47, "fields": {"type": 3, "title": "Урок 44 | Постраничная навигация | Часть 2", "slug": "urok-44-postranichnaya-navigaciya-chast-2", "content": "<p>Для получения текущей страницы нужно сделать следующие:</p>\r\n\r\n<p>{% if page_obj.number ==&nbsp;p&nbsp;%}</p>\r\n\r\n<p>{% endif %}</p>\r\n\r\n<p>Проверка существования предыдущей страницы:</p>\r\n\r\n<p>{%&nbsp; if page_obj.has_previous&nbsp;%}</p>\r\n\r\n<p>{{ page_obj.previous_page_number&nbsp;}}</p>\r\n\r\n<p>{% endif %}</p>\r\n\r\n<p>Проверка существования следующей страницы:</p>\r\n\r\n<p>{%&nbsp; if page_obj.has_next&nbsp;%}</p>\r\n\r\n<p>{{ page_obj.next_page_number&nbsp;}}</p>\r\n\r\n<p>{% endif %}</p>\r\n\r\n<p>Проверка нужна ли пагинация:</p>\r\n\r\n<p>{{&nbsp;page_obj.has_other_page&nbsp;}}</p>\r\n\r\n<p>&nbsp;</p>", "image": null, "created_at": "2021-09-22T13:18:07.758Z", "updated_at": "2021-09-22T13:18:07.758Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 48, "fields": {"type": 3, "title": "Урок 45 | Регистрация | Часть 1", "slug": "urok-45-registraciya-chast-1", "content": "<p>Для дефолтного добавления пользователей используется класс формы&nbsp;UserCreationForm&nbsp;</p>\r\n\r\n<p>from django.contrib.auth.forms import UserCreationForm</p>\r\n\r\n<p>def register(request):</p>\r\n\r\n<p>&nbsp; &nbsp; if request.method == &quot;POST&quot;:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp;form = UserCreationForm(request.POST)</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; if form.is_valid():</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; form.save()</p>\r\n\r\n<p>&nbsp; &nbsp; else:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;form = UserCreationForm()</p>\r\n\r\n<p>&nbsp; &nbsp; return render(request, &#39;news/register.html&#39;, {&quot;form&quot;:form})</p>\r\n\r\n<p>-------------------------------------------------------------------------------------------</p>\r\n\r\n<p>messages</p>\r\n\r\n<p>from django.contrib import messages</p>\r\n\r\n<p>def register(request):</p>\r\n\r\n<p>&nbsp; &nbsp; if request.method == &quot;POST&quot;:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp;form = UserCreationForm(request.POST)</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; if form.is_valid():</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; form.save()</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; messages.success(request,&#39;Вы зарегестрировались&#39;)</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return redirect(&#39;login&#39;)</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; else:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;messages.error(request, &#39;ошибка регистрации&#39; )</p>\r\n\r\n<p>&nbsp; &nbsp; else:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;form = UserCreationForm()</p>\r\n\r\n<p>&nbsp; &nbsp; return render(request, &#39;news/register.html&#39;, {&quot;form&quot;:form})</p>\r\n\r\n<p>Вывод сообщений в шаблоне</p>\r\n\r\n<p>{% if messages %}</p>\r\n\r\n<p>&lt;div class=&quot;alert alert-{{ message-tags&nbsp;}}&quot;&gt;</p>\r\n\r\n<p>&nbsp; &nbsp; {{ message }}</p>\r\n\r\n<p>&lt;/div&gt;</p>\r\n\r\n<p>{% endif %}</p>", "image": null, "created_at": "2021-09-22T14:13:43.355Z", "updated_at": "2021-09-22T14:13:43.355Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 49, "fields": {"type": 3, "title": "Урок 46 | Регистрация | Часть 2", "slug": "urok-46-registraciya-chast-2", "content": "<p>Для создании своей формы регистрации нужен класс формы, наследуемый от UserCreationForm:</p>\r\n\r\n<p>from django.contrib.auth.forms import UserCreationForm</p>\r\n\r\n<p>from django.contrib.auth.models import User</p>\r\n\r\n<p><br />\r\nclass UserRegistrationForm(UserCreationForm):</p>\r\n\r\n<p>&nbsp; &nbsp; email = forms.EmailField(label=&quot;email&quot;, widget=forms.EmailInput(attrs={&#39;class&#39;:&#39;form-control&#39;}))</p>\r\n\r\n<p>&nbsp; &nbsp; class Meta:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; model = User</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; fields =(&#39;username&#39;,&#39;email&#39;,&#39;password1&#39;,&#39;password2&#39;)</p>", "image": null, "created_at": "2021-09-23T10:03:39.763Z", "updated_at": "2021-09-23T10:03:39.763Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 50, "fields": {"type": 3, "title": "Урок 47 | Авторизация", "slug": "urok-47-avtorizaciya", "content": "<p>Авторизация пользователя делятся по дефолту на 2 этапа:</p>\r\n\r\n<p>1) Аутификация пользователя - проверка существования пользователя в системе: user = authenticate(request, username=&quot;username&quot;, password=&quot;password&quot;)</p>\r\n\r\n<p>2) Залогиневание пользователя: login(request, user)</p>\r\n\r\n<p>Логирование производится за счёт формы AuthenticationForm, что бы её кастомизировать нужно создать форму которая будет наследоваться от неё</p>\r\n\r\n<p>Пример функции контроллера для авторизации</p>\r\n\r\n<p>from django.contrib.auth import login</p>\r\n\r\n<p>def login_user():</p>\r\n\r\n<p>&nbsp; &nbsp; if request.method== &quot;POST&quot;:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; form = UserLoginForm(data=request.POST) //---При передачи данных в форму их нужно передовать&nbsp; в переменную data</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; if form.is_valid():</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; user = form.get_user()</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; login(request,user)</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return redirect(&quot;home&quot;)</p>\r\n\r\n<p>&nbsp; &nbsp;else:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; form = User:oginForm()</p>\r\n\r\n<p>&nbsp; return render(request, &quot;home/login.html&quot;, {&quot;form&quot; : form})</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Logout функция:</p>\r\n\r\n<p>from django.contrib.auth import logout</p>\r\n\r\n<p>def logout_user(request):</p>\r\n\r\n<p>&nbsp; &nbsp; logout(request)</p>\r\n\r\n<p>&nbsp; &nbsp; return redirect(&#39;login&#39;)</p>\r\n\r\n<p>При регистрации пользователя, при успешной заполнении формы, можно сразу его залогинить:</p>\r\n\r\n<p>user = form.save()</p>\r\n\r\n<p>login(request, user)</p>\r\n\r\n<p>Так же нужно не забыть при авторизованном пользователе за место кнопок регистрация и вход вставить имя пользователя</p>\r\n\r\n<p>{%&nbsp; if request.user.is_authenticated %}</p>\r\n\r\n<p>Welcome {{ user.username&nbsp;}}</p>\r\n\r\n<p>&lt;a href=&quot;{{&nbsp; url &quot;logout&quot; }}&quot;&gt;Logout&lt;/a&gt;</p>\r\n\r\n<p>{% else %}</p>\r\n\r\n<p>&lt;a href=&quot;{{ url &quot;registration&quot; }}&quot;&gt;Registration&lt;/a&gt;</p>\r\n\r\n<p>&lt;a href=&quot;{{ url &quot;login&quot; }}&quot;&gt;Login&lt;/a&gt;</p>\r\n\r\n<p>{% endif&nbsp;%}</p>", "image": null, "created_at": "2021-09-23T13:51:35.789Z", "updated_at": "2021-09-23T13:51:35.789Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 51, "fields": {"type": 3, "title": "Урок 48 | Отправка писем на Email", "slug": "urok-48-otpravka-pisem-na-email", "content": "<p>Для отправки мыла используется функция send_mail:</p>\r\n\r\n<p>from django.core.mail import send_mail</p>\r\n\r\n<p>send_mail(</p>\r\n\r\n<p>&nbsp; &nbsp; &#39;Subject here&#39;,</p>\r\n\r\n<p>&nbsp; &nbsp;&nbsp;&#39;Here is message,</p>\r\n\r\n<p>&nbsp; &nbsp; &#39;from@example.com&#39;,</p>\r\n\r\n<p>&nbsp; &nbsp; [&#39;to@example.com&#39;],</p>\r\n\r\n<p>&nbsp; &nbsp; fail_silenty=False //--- Если будут ошибки при отправки письма, то джанго выкенит исключение</p>\r\n\r\n<p>)</p>\r\n\r\n<p>Есть отдельно функция для массовых рассылок: send_mass_mail()</p>", "image": null, "created_at": "2021-09-23T14:48:40.400Z", "updated_at": "2021-09-23T14:48:40.400Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 52, "fields": {"type": 3, "title": "Урок 49 | Визуальный редактор CKEditor", "slug": "urok-49-vizualnyj-redaktor-ckeditor", "content": "<p>1)Накатывает django-ckeditor: pip install&nbsp;&nbsp;django-ckeditor</p>\r\n\r\n<p>2) Add ckeditor in array INSTALLED_APPS in settings.py</p>\r\n\r\n<p>3) Прописываем глобальную переменную STATIC_ROOT&nbsp;</p>\r\n\r\n<p>4) python manage.py collectstatic</p>\r\n\r\n<p>5) Добавляем константу в settings.py CKEDITOR_UPLOAD_PATH=&quot;uploads/&quot;, она указывает куда будут грузится медиа составляющие</p>\r\n\r\n<p>6) Добавляем в url массив path(&quot;ckeditor.&quot;, include(ckeditor_ploader.urls))</p>\r\n\r\n<p>Для добавления поля в форму, использовать виджет CKEditorWidget или CKEditorUploadWidget, если нужно ещё поддержка медиа:</p>\r\n\r\n<pre>\r\nfrom ckeditor.widgets import CKEditorWidget\r\nclass PostAdminForm(forms.ModelForm):\r\n    content = forms.CharField(widget=CKEditorWidget())\r\n    class Meta:\r\n        model = Post\r\n        fields = &#39;__all__&#39;</pre>\r\n\r\n<p>Конфигурация CKEDITOR производится в settings в глобальной переменной CKEDITOR_CONFIGS</p>\r\n\r\n<p>&nbsp;</p>", "image": null, "created_at": "2021-09-23T16:01:41.336Z", "updated_at": "2021-09-23T16:01:41.336Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 53, "fields": {"type": 3, "title": "Урок 50 | Капча", "slug": "urok-50-kapcha", "content": "<p>1) pip install django-simple-captcha</p>\r\n\r\n<p>2) Add captcha to the INSTALLED_APPS in your settings.py</p>\r\n\r\n<p>3) python manage.py migrate</p>\r\n\r\n<p>4) app url&nbsp; path(&#39;captcha/&#39;, include(&#39;captcha.urls&#39;))</p>\r\n\r\n<p>5) к форме куда нужна каптча добавляем CaptchaField()</p>\r\n\r\n<p>from captcha.fields import CaptchaFIeld</p>\r\n\r\n<p>class TestForm(forms.Form):</p>\r\n\r\n<p>&nbsp; &nbsp; myfield=AnyOtherField()</p>\r\n\r\n<p>&nbsp; &nbsp; captcha&nbsp; = CaptchaField()</p>", "image": null, "created_at": "2021-09-23T16:20:54.526Z", "updated_at": "2021-09-23T16:20:54.526Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 54, "fields": {"type": 3, "title": "Урок 51 | Кэширование", "slug": "urok-51-keshirovanie", "content": "<p>&nbsp;Для кеширования в файловую систему, например. Нужно прописать следующую константу</p>\r\n\r\n<pre>\r\nCACHES = {\r\n    &#39;default&#39;: {\r\n        &#39;BACKEND&#39;: &#39;django.core.cache.backends.filebased.FileBasedCache&#39;,\r\n        &#39;LOCATION&#39;: &#39;/var/tmp/django_cache&#39;,\r\n    }\r\n}</pre>\r\n\r\n<p>создаём папку django_cache</p>\r\n\r\n<p>Для кеширования страниц в контроллерах используется декоратор cache_page, параментром принимается время кеширование в секундах</p>\r\n\r\n<p>from django.views.decorators.cache import cache_page&nbsp;</p>\r\n\r\n<p>@cache_page(60*15)</p>\r\n\r\n<p>def my_view(request):</p>\r\n\r\n<p>&nbsp; &nbsp; ...</p>\r\n\r\n<p>Так же можно кешировать на уровне url</p>\r\n\r\n<p>urlpatterns = [</p>\r\n\r\n<p>&nbsp; &nbsp;path(&quot;foo/&quot;, cache_page(60*15)(my_view))</p>\r\n\r\n<p>]</p>\r\n\r\n<p>Можно кешировать фрагменты шаблона&nbsp;</p>\r\n\r\n<p>{% load cache&nbsp;%}</p>\r\n\r\n<p>{% cache 500 sidebar&nbsp;%}</p>\r\n\r\n<p>&nbsp; &nbsp; ..&nbsp; sidebar&nbsp; ..</p>\r\n\r\n<p>{% endcache %}</p>", "image": null, "created_at": "2021-09-23T16:43:22.712Z", "updated_at": "2021-09-23T16:43:22.712Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 55, "fields": {"type": 1, "title": "хранение дерева в БД, разбор Nested Set", "slug": "hranenie-dereva-v-bd-razbor-nested-set", "content": "<p>Всего существует 3 популярных способа хранения деревьев:</p>\r\n\r\n<p>1) Adjacency List&nbsp;- когда у нас родитель храниться в колонке типа parent_id:1. Тут могут возникнуть проблемы при чтении. Но они решаются кешериованием</p>\r\n\r\n<p>2)Matherialized Path - полный пусть до элемента хранится в колонке типа path: &quot;1.2.5&quot;</p>\r\n\r\n<p>3) Nested Set - пара колонок lft и rgt, хранящие диапозон всех вложенных элементов, например корень дерева из 9 элементов будет иметь левое значение &quot;1&quot;, а правое - &quot;18&quot;</p>\r\n\r\n<p>Nested Sets (Вложенные множества) подразумевает присвоение каждому узлу в дереве двух дополнительных ключей left key и right key. Для заполнения этих ключей нам придется полностью обойти всё дерево дважды посещая каждый из узлов. В результате выборка из дерева будет происходить довольно быстро. С другой стороны изменение структуры требует пересчета всех ключей в узлах следующих за изменяемым узлом.</p>\r\n\r\n<h2>Плюсы</h2>\r\n\r\n<p>В базах, которые не поддерживают рекурсивные запросы (например, MySQL) выборка из дерева происходит быстрее, чем если бы она делалась с помощью хранимой процедуры.</p>\r\n\r\n<h2>Минусы</h2>\r\n\r\n<p>Изменения в базе занимают много времени, так как приходится обновлять все левые и правые ключи в записях, идущих после изменяемой.</p>\r\n\r\n<h2>Какие выборки можно сделать?</h2>\r\n\r\n<ul>\r\n\t<li>Все узлы дерева<br />\r\n\tSELECT&nbsp;*&nbsp;FROM&nbsp;tree&nbsp;ORDER BY&nbsp;left_key</li>\r\n\t<li>Выбор дочерних узлов<br />\r\n\tSELECT&nbsp;*&nbsp;FROM&nbsp;tree&nbsp;WHERE&nbsp;left_key&nbsp;&gt;=&nbsp;$left_key&nbsp;AND&nbsp;right_key&nbsp;&lt;=&nbsp;$right_key&nbsp;ORDER BY&nbsp;left_key</li>\r\n\t<li>Выбор всех родительских узлов<br />\r\n\tSELECT&nbsp;*&nbsp;FROM&nbsp;tree&nbsp;WHERE&nbsp;left_key&nbsp;&lt;=&nbsp;$left_key&nbsp;AND&nbsp;right_key&nbsp;&gt;=&nbsp;$right_key&nbsp;ORDER BY&nbsp;left_key</li>\r\n\t<li>Выбор ветки, в которой учавствует узел<br />\r\n\tSELECT&nbsp;*&nbsp;FROM&nbsp;tree&nbsp;WHERE&nbsp;right_key&nbsp;&gt;&nbsp;$left_key&nbsp;AND&nbsp;left_key&nbsp;&lt;&nbsp;$right_key&nbsp;ORDER BY&nbsp;left_key</li>\r\n</ul>\r\n\r\n<p>Подробнее о работе с деревом Nested sets написано&nbsp;<a href=\"http://www.getinfo.ru/article610.html\">в статье</a>&nbsp;Сергя Томулевича. Очень рекомендую к прочтению.</p>", "image": null, "created_at": "2021-09-25T07:58:35.624Z", "updated_at": "2021-09-25T09:28:44.826Z", "terms": [6, 7]}}, {"model": "wordpress.entities", "pk": 56, "fields": {"type": 3, "title": "Урок 17 | Многоуровневое меню. Часть 2", "slug": "urok-17-mnogourovnevoe-menyu-chast-2", "content": "<p>Хранение деревьев в БД с помощью nested set:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>1) накатывает pip install django-mptt</p>\r\n\r\n<p>2) add mptt to INSTALLET_APPS</p>\r\n\r\n<p>from mptt.models import MPTTModel, TreeForeignKey</p>\r\n\r\n<p>class Rubric(MPTTModel):</p>\r\n\r\n<p>&nbsp; &nbsp; name = models.CharField(max_lenght=50,unique=true)</p>\r\n\r\n<p>&nbsp; &nbsp; parent = TreeForeignKey(&quot;self&quot;, on_delete=models.CASCADE, null=True, blank=True, related_name=&quot;children&quot;)</p>\r\n\r\n<p>&nbsp; &nbsp; class MPTTMETA:</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; order_insertion_by = [&quot;name&quot;]</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Для вывода в шаблоне:&nbsp;</p>\r\n\r\n<p>{% load mptt_tags&nbsp;%}</p>\r\n\r\n<p>&lt;ul&gt;</p>\r\n\r\n<p>&nbsp; {% recursetree rubrics %}</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp;{{ node.name&nbsp;}}</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; {%&nbsp; if not node.is_leaf_mode&nbsp;%}</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;ul class=&quot;children&quot;&gt;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{{ children }}</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/ul&gt;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; {% endif %}</p>\r\n\r\n<p>&nbsp; {% endrecursetree %}</p>\r\n\r\n<p>&lt;/ul&gt;</p>", "image": null, "created_at": "2021-09-25T08:34:45.005Z", "updated_at": "2021-09-25T08:34:45.005Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 57, "fields": {"type": 3, "title": "Урок 19 | Многоуровневое меню. Часть 3", "slug": "urok-19-mnogourovnevoe-menyu-chast-3", "content": "<p>Для настройки вывода&nbsp;дерево записей в админке:</p>\r\n\r\n<p>from mptt.admin import MPTTModelAdmin</p>\r\n\r\n<p>admin.site.register(Rubric, MPTTModelAdmin&nbsp;)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>При указании на модель с деревом из ддругой модели нужно исопльзовать TreeForeignKey:</p>\r\n\r\n<p>class Article(models.Model):</p>\r\n\r\n<p>&nbsp; &nbsp; name = models.CharField( max_lenght=150&nbsp;)</p>\r\n\r\n<p>&nbsp; &nbsp; rubric = TreeForeignKey( Rubric,on_delete=models.PROTECT )&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Можно использовать Drag &amp; drop, для этого нужно импортировать DraggbleMPTTAdmin:</p>\r\n\r\n<p>from mptt.admin import DraggbleMPTTAdmin</p>\r\n\r\n<p>admin.site.register(Rubric, DraggbleMPTTAdmin&nbsp;)</p>\r\n\r\n<p>&nbsp;</p>", "image": null, "created_at": "2021-09-25T08:44:21.076Z", "updated_at": "2021-09-25T08:44:21.076Z", "terms": [8, 5, 18, 19]}}, {"model": "wordpress.entities", "pk": 58, "fields": {"type": 1, "title": "Какие продукты помогут бросить курить: рассказывают врачи", "slug": "kakie-produkty-pomogut-brosit-kurit-rasskazyvayut-vrachi", "content": "<p>https://74.ru/text/food/2021/09/19/70141667/</p>\r\n\r\n<p>Формирование никотиновой зависимости происходит благодаря нескольким факторам: социальные, генетические и психологические. Никотин это биологически активное вещество, которое воздействует на парасемпатическую нервную систему и вызывает зависимость. Не никотин виноват в формировании пристратия к курению.</p>\r\n\r\n<p>&mdash; При поступлении в организм никотин связывается с никотиновыми рецепторами нервных клеток и начинает конкурировать с природным ацетилхолином, который играет важную роль в процессах передачи нервных импульсов, в активации внимания, памяти концентрации мыслительных процессов. При этом происходит выброс гормона удовольствия - дофамина, тем самым активируется система вознагрождения.Собственные нейромедиаторы поддерживают работу мозга, а наркотики, в частности никотин, разрушают нормальную работу мозга.<img alt=\"\" src=\"/media/uploads/2021/10/03/2021-10-03_17-03.png\" style=\"height:896px; width:734px\" /></p>\r\n\r\n<p>При постоянном воздействии никотина чувствительность рецепторов и вырабатка собственного ацетилхолина постепенно снижается, в следствии этого никотина нужно всё больше. Тут и появляется психологическая и физиологическая зависимость.</p>\r\n\r\n<p>Следовательно для повышения ацетилхолина нужно есть продукты содерщие холин (его предшественника), но так же необходимы кофакторы: витамины группы B.Они содержатся, в частности, в печени индейки, бобовых, яйцах, бананах, грече, грецких орехах, фундук, капусте.</p>\r\n\r\n<p><img alt=\"\" src=\"/media/uploads/2021/10/03/2021-10-03_17-09.png\" style=\"height:723px; width:586px\" /></p>\r\n\r\n<p>Так же необходимы витамины группы C,E.&nbsp;&nbsp;Здесь идеально подойдут цитрусовые, болгарский перец, капуста, киви, черная смородина (как источники витамина С), миндаль, фисташки, семена подсолнечника, горох, облепиха и капуста (как источники витамина Е). Так же при повышенной тревожности, хорошо поможет магний</p>\r\n\r\n<p><img alt=\"\" src=\"/media/uploads/2021/10/03/2021-10-03_17-11.png\" style=\"height:894px; width:731px\" /></p>\r\n\r\n<p>А преодолеть хроническую интоксикацию, вызванную табакокурением, помогут брокколи (благодаря сульфорафану), зеленый чай, гранатовый сок и грейпфрут.</p>\r\n\r\n<p>Никотин влияет на аппетит, понижая его. При отказе от никотина, возмещение чуства вознаграждения восполняется через еду.</p>\r\n\r\n<p>По советам диетоологов, всегда лучше держать нарезанные овощи на случий если захочется покурить:&nbsp;сырую морковь, сельдерей, болгарский перец</p>\r\n\r\n<p>В определённых овощах есть содержание никотиновой кислоты. Но оно очень мало. Можно уменьшить тягу, но не сильно.</p>\r\n\r\n<p><img src=\"/media/uploads/2021/10/03/image_E43hFZC.png\" style=\"height:897px; width:727px\" /></p>", "image": null, "created_at": "2021-10-03T11:58:51.064Z", "updated_at": "2021-10-03T12:22:50.301Z", "terms": [22]}}, {"model": "wordpress.entities", "pk": 59, "fields": {"type": 1, "title": "Холодильник против бессонницы: 5 продуктов, которые помогут заснуть", "slug": "holodilnik-protiv-bessonnicy-5-produktov-kotorye-pomogut-zasnut", "content": "<p>https://74.ru/text/food/2021/10/03/70169675/<br />\r\nДля более качественного сна требуется вырабатка мелатонина. Идеальное время для сна &nbsp;22-23, в это время вырабатывается милатонин. Так же выработке мелатонина способствуют некоторые продукты перед сном:</p>\r\n\r\n<h2><strong>Бананы.</strong></h2>\r\n\r\n<p>Содержат B6 который необходим для выработки мелатонина, который помогает регулировать фазы сна.&nbsp; Так же содержит калий, котоырй действует как мышечный релаксант,&nbsp;так же&nbsp;содержаттриптофан - вещество вызывающее сонливость, и выработку сератонина. Бананы следует есть не позже чем за час до сна и не более 1 штуки.</p>\r\n\r\n<p><img src=\"/media/uploads/2021/10/04/image.png\" style=\"height:858px; width:726px\" /></p>\r\n\r\n<h2><strong>Миндаль</strong></h2>\r\n\r\n<p>Было доказано что миндаль, что в виде орехов,&nbsp; что в виде масла поможет преодолеть бессницу. И все благодаря содержанию магния в нём. Именно дефицит магния, часто наблюдается при бессонице.&nbsp;</p>\r\n\r\n<p>Советуют закапать пара капель мендального масла перед сном в нос или съесть 10 миндальных орехов.</p>\r\n\r\n<h2><strong>Рыба</strong></h2>\r\n\r\n<p>В вопросе сна рыба полезна по причине содержания в ней витамина B6.</p>\r\n\r\n<p><img src=\"/media/uploads/2021/10/04/image_5KOnXAw.png\" style=\"height:780px; width:725px\" /></p>\r\n\r\n<h2><strong>Молоко или кефир</strong></h2>\r\n\r\n<p>Немного теплого молока способствует выработке триптофана - аминокислота, необходима для выработке мелатонина. Кроме того молоко богато казеином -&nbsp; белком, который медленно усваивается и отвечает за наращиваение мышц во сне.&nbsp; Так же можно приготовить себе небольшую порцию овсяной болтушки - там и кальций с магнием , фосформ, кремний, калий. Главное не переборщить с сахаром.</p>\r\n\r\n<p>Кефир богат микроэлементами, которые помогает расслабить мышечную и неврнуб систему перед сном. Но его не советуют пить людям с проблемами ЖКТ и людям склонными к мигреням.&nbsp;</p>\r\n\r\n<p>Объем не должен привышать 100 миллилитров.</p>\r\n\r\n<p><img src=\"/media/uploads/2021/10/04/image_p1UZANv.png\" style=\"height:787px; width:728px\" /></p>\r\n\r\n<h2><strong>Мёд</strong></h2>\r\n\r\n<p>Благодаря содержания натурального&nbsp;сахара, повышает уровень инсулина что способствует триптофану лучше проникать в мозг. Советуют есть 1 чайную ложку за пол часа до сна. Если эффекта не будет через неделю, то увеличить дозу.</p>\r\n\r\n<p><img src=\"/media/uploads/2021/10/04/image_4OhDEEy.png\" style=\"height:796px; width:727px\" /></p>\r\n\r\n<p>&nbsp;</p>", "image": 9, "created_at": "2021-10-04T02:30:48.630Z", "updated_at": "2021-10-04T02:31:12.402Z", "terms": [22, 27]}}, {"model": "wordpress.entities", "pk": 66, "fields": {"type": 1, "title": "Тестовая заметка", "slug": "test", "content": "<p>Какой то там контент</p>", "image": null, "created_at": "2021-10-04T12:42:56.321Z", "updated_at": "2021-10-04T12:42:56.346Z", "terms": [5]}}, {"model": "wordpress.terms", "pk": 5, "fields": {"type": "tag", "title": "Программирование", "slug": "programmirovanie", "description": "Все разделы по программированию", "parent": null, "image": null, "created_at": "2021-09-17T13:53:28.418Z", "updated_at": "2021-09-17T13:53:28.418Z", "lft": 1, "rght": 1, "tree_id": 2, "level": 0, "postTypes": [1, 2, 3], "fields": []}}, {"model": "wordpress.terms", "pk": 6, "fields": {"type": "tag", "title": "mysql", "slug": "mysql", "description": "", "parent": null, "image": null, "created_at": "2021-09-17T13:53:43.045Z", "updated_at": "2021-09-17T13:53:43.045Z", "lft": 1, "rght": 1, "tree_id": 2, "level": 0, "postTypes": [1, 2, 3], "fields": []}}, {"model": "wordpress.terms", "pk": 7, "fields": {"type": "tag", "title": "Базы данных", "slug": "bazy-dannyh", "description": "", "parent": null, "image": null, "created_at": "2021-09-17T13:54:01.738Z", "updated_at": "2021-09-17T13:54:01.738Z", "lft": 1, "rght": 1, "tree_id": 2, "level": 0, "postTypes": [1, 2, 3], "fields": []}}, {"model": "wordpress.terms", "pk": 8, "fields": {"type": "tag", "title": "Python", "slug": "python", "description": "", "parent": null, "image": null, "created_at": "2021-09-17T14:33:03.434Z", "updated_at": "2021-09-17T14:33:03.434Z", "lft": 1, "rght": 1, "tree_id": 2, "level": 0, "postTypes": [1, 2, 3], "fields": []}}, {"model": "wordpress.terms", "pk": 9, "fields": {"type": "tag", "title": "с++", "slug": "s", "description": "", "parent": null, "image": null, "created_at": "2021-09-21T15:41:55.694Z", "updated_at": "2021-09-21T15:41:55.694Z", "lft": 1, "rght": 1, "tree_id": 2, "level": 0, "postTypes": [1, 2, 3], "fields": []}}, {"model": "wordpress.terms", "pk": 18, "fields": {"type": "category", "title": "Youtube", "slug": "youtube", "description": "<p>{&#39;url&#39;: &#39;&#39;, &#39;alt&#39;: &#39;&#39;, &#39;id&#39;: &#39;&#39;}</p>", "parent": null, "image": null, "created_at": "2021-09-29T08:50:12.169Z", "updated_at": "2021-10-02T16:35:22.677Z", "lft": 1, "rght": 4, "tree_id": 3, "level": 0, "postTypes": [1, 3], "fields": []}}, {"model": "wordpress.terms", "pk": 19, "fields": {"type": "category", "title": "Курс Django Web for My self", "slug": "kurs-django-web-for-my-self", "description": "https://www.youtube.com/watch?v=6g2W5KVrbcM&list=PLvb7ivodu7oTvNX-YtW3BpG01rJPnn8DQ", "parent": 18, "image": null, "created_at": "2021-09-29T08:52:09.747Z", "updated_at": "2021-09-29T08:52:09.747Z", "lft": 2, "rght": 3, "tree_id": 3, "level": 1, "postTypes": [3], "fields": []}}, {"model": "wordpress.terms", "pk": 20, "fields": {"type": "category", "title": "Stepik", "slug": "stepik", "description": "", "parent": null, "image": null, "created_at": "2021-09-29T08:52:27.157Z", "updated_at": "2021-09-29T08:52:27.157Z", "lft": 1, "rght": 4, "tree_id": 4, "level": 0, "postTypes": [3], "fields": []}}, {"model": "wordpress.terms", "pk": 21, "fields": {"type": "category", "title": "Введение в C++", "slug": "vvedenie-v-c", "description": "", "parent": 20, "image": null, "created_at": "2021-09-29T08:52:44.571Z", "updated_at": "2021-10-04T03:41:45.211Z", "lft": 2, "rght": 3, "tree_id": 4, "level": 1, "postTypes": [3], "fields": []}}, {"model": "wordpress.terms", "pk": 22, "fields": {"type": "tag", "title": "Здоровье", "slug": "zdorove", "description": "", "parent": null, "image": null, "created_at": "2021-10-03T11:58:47.495Z", "updated_at": "2021-10-03T11:58:47.495Z", "lft": 1, "rght": 2, "tree_id": 5, "level": 0, "postTypes": [1], "fields": []}}, {"model": "wordpress.terms", "pk": 27, "fields": {"type": "tag", "title": "Диета", "slug": "dieta", "description": "", "parent": null, "image": null, "created_at": "2021-10-04T02:29:54.885Z", "updated_at": "2021-10-04T02:29:54.885Z", "lft": 1, "rght": 2, "tree_id": 10, "level": 0, "postTypes": [1], "fields": []}}, {"model": "photologue.photo", "pk": 1, "fields": {"image": "photologue/photos/reminder-note-png-clip-art-image-5a3b9be704daa0.6383115015138559750199.jpg", "date_taken": null, "view_count": 620, "crop_from": "center", "effect": null, "title": "note-png", "slug": "note-png", "caption": "", "date_added": "2021-09-30T16:12:52Z", "is_public": true, "sites": [1]}}, {"model": "photologue.photo", "pk": 2, "fields": {"image": "photologue/photos/download.jpeg", "date_taken": null, "view_count": 606, "crop_from": "center", "effect": null, "title": "book-png", "slug": "book-png", "caption": "", "date_added": "2021-09-30T16:14:27Z", "is_public": true, "sites": [1]}}, {"model": "photologue.photo", "pk": 3, "fields": {"image": "photologue/photos/png-transparent-computer-icons-educational-technology-learning-trainin_Yl386gq.png", "date_taken": null, "view_count": 606, "crop_from": "center", "effect": null, "title": "курсы-png", "slug": "kursy-png", "caption": "", "date_added": "2021-09-30T16:17:01Z", "is_public": true, "sites": [1]}}, {"model": "photologue.photo", "pk": 4, "fields": {"image": "photologue/photos/MySQL_transaction.jpg", "date_taken": null, "view_count": 386, "crop_from": "center", "effect": null, "title": "MySQL_transaction", "slug": "mysql_transaction", "caption": "", "date_added": "2021-09-30T16:53:08Z", "is_public": true, "sites": [1]}}, {"model": "photologue.photo", "pk": 5, "fields": {"image": "", "date_taken": null, "view_count": 0, "crop_from": "center", "effect": null, "title": "", "slug": "", "caption": "", "date_added": "2021-10-02T12:56:19.870Z", "is_public": true, "sites": [1]}}, {"model": "photologue.photo", "pk": 7, "fields": {"image": "", "date_taken": null, "view_count": 0, "crop_from": "center", "effect": null, "title": "title", "slug": "slug", "caption": "", "date_added": "2021-10-02T13:01:54.452Z", "is_public": true, "sites": [1]}}, {"model": "photologue.photo", "pk": 9, "fields": {"image": "photologue/photos/2021-10-04_07-30.png", "date_taken": null, "view_count": 9, "crop_from": "center", "effect": null, "title": "Холодильник против бессонницы: 5 продуктов, которые помогут заснуть", "slug": "holodilnik-protiv-bessonnicy-5-produktov-kotorye-pomogut-zasnut", "caption": "", "date_added": "2021-10-04T02:30:21Z", "is_public": true, "sites": [1]}}, {"model": "photologue.photosize", "pk": 1, "fields": {"name": "admin_thumbnail", "width": 100, "height": 75, "quality": 70, "upscale": false, "crop": true, "pre_cache": true, "increment_count": false, "effect": null, "watermark": null}}, {"model": "photologue.photosize", "pk": 2, "fields": {"name": "thumbnail", "width": 100, "height": 75, "quality": 70, "upscale": false, "crop": true, "pre_cache": true, "increment_count": false, "effect": null, "watermark": null}}, {"model": "photologue.photosize", "pk": 3, "fields": {"name": "display", "width": 400, "height": 0, "quality": 70, "upscale": false, "crop": false, "pre_cache": true, "increment_count": true, "effect": null, "watermark": null}}, {"model": "sites.site", "pk": 1, "fields": {"domain": "example.com", "name": "example.com"}}]